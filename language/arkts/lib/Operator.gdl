/**
 * This type consists of the following types: [PlusPlusToken, MinusMinusToken, PlusToken, MinusToken, TildeToken, ExclamationToken]
 */
schema PrefixUnaryOperator extends AstNode {
}

impl PrefixUnaryOperator {
    @data_constraint
    @inline
    pub fn __all__(db: ArkTsDB) -> *PrefixUnaryOperator {
        for (plusPlusToken in PlusPlusToken(db)) {
            yield PrefixUnaryOperator {
                id : plusPlusToken.id,
                kind : plusPlusToken.kind,
                parent_id : plusPlusToken.parent_id,
                parent_kind : plusPlusToken.parent_kind,
                index : plusPlusToken.index,
                location_id : plusPlusToken.location_id,
            }
        }
        for (minusMinusToken in MinusMinusToken(db)) {
            yield PrefixUnaryOperator {
                id : minusMinusToken.id,
                kind : minusMinusToken.kind,
                parent_id : minusMinusToken.parent_id,
                parent_kind : minusMinusToken.parent_kind,
                index : minusMinusToken.index,
                location_id : minusMinusToken.location_id,
            }
        }
        for (plusToken in PlusToken(db)) {
            yield PrefixUnaryOperator {
                id : plusToken.id,
                kind : plusToken.kind,
                parent_id : plusToken.parent_id,
                parent_kind : plusToken.parent_kind,
                index : plusToken.index,
                location_id : plusToken.location_id,
            }
        }
        for (minusToken in MinusToken(db)) {
            yield PrefixUnaryOperator {
                id : minusToken.id,
                kind : minusToken.kind,
                parent_id : minusToken.parent_id,
                parent_kind : minusToken.parent_kind,
                index : minusToken.index,
                location_id : minusToken.location_id,
            }
        }
        for (tildeToken in TildeToken(db)) {
            yield PrefixUnaryOperator {
                id : tildeToken.id,
                kind : tildeToken.kind,
                parent_id : tildeToken.parent_id,
                parent_kind : tildeToken.parent_kind,
                index : tildeToken.index,
                location_id : tildeToken.location_id,
            }
        }
        for (exclamationToken in ExclamationToken(db)) {
            yield PrefixUnaryOperator {
                id : exclamationToken.id,
                kind : exclamationToken.kind,
                parent_id : exclamationToken.parent_id,
                parent_kind : exclamationToken.parent_kind,
                index : exclamationToken.index,
                location_id : exclamationToken.location_id,
            }
        }
    }

    /**
     * Get primary key.
     */
    pub fn getPrimaryKey(self) -> int {
        return self.id
    }
    
    /**
     * trans to PlusPlusToken
     */
    pub fn toPlusPlusToken(self) -> PlusPlusToken {
        for (plusPlusToken in PlusPlusToken(__all_data__)) {
            if (plusPlusToken.key_eq(self)) {
                return plusPlusToken
            }
        }
    }
    
    /**
     * trans to MinusMinusToken
     */
    pub fn toMinusMinusToken(self) -> MinusMinusToken {
        for (minusMinusToken in MinusMinusToken(__all_data__)) {
            if (minusMinusToken.key_eq(self)) {
                return minusMinusToken
            }
        }
    }
    
    /**
     * trans to PlusToken
     */
    pub fn toPlusToken(self) -> PlusToken {
        for (plusToken in PlusToken(__all_data__)) {
            if (plusToken.key_eq(self)) {
                return plusToken
            }
        }
    }
    
    /**
     * trans to MinusToken
     */
    pub fn toMinusToken(self) -> MinusToken {
        for (minusToken in MinusToken(__all_data__)) {
            if (minusToken.key_eq(self)) {
                return minusToken
            }
        }
    }
    
    /**
     * trans to TildeToken
     */
    pub fn toTildeToken(self) -> TildeToken {
        for (tildeToken in TildeToken(__all_data__)) {
            if (tildeToken.key_eq(self)) {
                return tildeToken
            }
        }
    }
    
    /**
     * trans to ExclamationToken
     */
    pub fn toExclamationToken(self) -> ExclamationToken {
        for (exclamationToken in ExclamationToken(__all_data__)) {
            if (exclamationToken.key_eq(self)) {
                return exclamationToken
            }
        }
    }
    
}

/**
 * This type consists of the following types: [PlusPlusToken, MinusMinusToken]
 */
schema PostUnaryOperator extends AstNode {
}

impl PostUnaryOperator {
    @data_constraint
    @inline
    pub fn __all__(db: ArkTsDB) -> *PostUnaryOperator {
        for (plusPlusToken in PlusPlusToken(db)) {
            yield PostUnaryOperator {
                id : plusPlusToken.id,
                kind : plusPlusToken.kind,
                parent_id : plusPlusToken.parent_id,
                parent_kind : plusPlusToken.parent_kind,
                index : plusPlusToken.index,
                location_id : plusPlusToken.location_id,
            }
        }
        for (minusMinusToken in MinusMinusToken(db)) {
            yield PostUnaryOperator {
                id : minusMinusToken.id,
                kind : minusMinusToken.kind,
                parent_id : minusMinusToken.parent_id,
                parent_kind : minusMinusToken.parent_kind,
                index : minusMinusToken.index,
                location_id : minusMinusToken.location_id,
            }
        }
    }

    /**
     * Get primary key.
     */
    pub fn getPrimaryKey(self) -> int {
        return self.id
    }
    
    /**
     * trans to PlusPlusToken
     */
    pub fn toPlusPlusToken(self) -> PlusPlusToken {
        for (plusPlusToken in PlusPlusToken(__all_data__)) {
            if (plusPlusToken.key_eq(self)) {
                return plusPlusToken
            }
        }
    }
    
    /**
     * trans to MinusMinusToken
     */
    pub fn toMinusMinusToken(self) -> MinusMinusToken {
        for (minusMinusToken in MinusMinusToken(__all_data__)) {
            if (minusMinusToken.key_eq(self)) {
                return minusMinusToken
            }
        }
    }
    
}

/**
 * This type consists of the following types: [AsteriskAsteriskToken]
 */
schema ExponentiationOperator extends AstNode {
}

impl ExponentiationOperator {
    @data_constraint
    @inline
    pub fn __all__(db: ArkTsDB) -> *ExponentiationOperator {
        for (asteriskAsteriskToken in AsteriskAsteriskToken(db)) {
            yield ExponentiationOperator {
                id : asteriskAsteriskToken.id,
                kind : asteriskAsteriskToken.kind,
                parent_id : asteriskAsteriskToken.parent_id,
                parent_kind : asteriskAsteriskToken.parent_kind,
                index : asteriskAsteriskToken.index,
                location_id : asteriskAsteriskToken.location_id,
            }
        }
    }

    /**
     * Get primary key.
     */
    pub fn getPrimaryKey(self) -> int {
        return self.id
    }
    
    /**
     * trans to AsteriskAsteriskToken
     */
    pub fn toAsteriskAsteriskToken(self) -> AsteriskAsteriskToken {
        for (asteriskAsteriskToken in AsteriskAsteriskToken(__all_data__)) {
            if (asteriskAsteriskToken.key_eq(self)) {
                return asteriskAsteriskToken
            }
        }
    }
    
}

/**
 * This type consists of the following types: [AsteriskToken, SlashToken, PercentToken]
 */
schema MultiplicativeOperator extends AstNode {
}

impl MultiplicativeOperator {
    @data_constraint
    @inline
    pub fn __all__(db: ArkTsDB) -> *MultiplicativeOperator {
        for (asteriskToken in AsteriskToken(db)) {
            yield MultiplicativeOperator {
                id : asteriskToken.id,
                kind : asteriskToken.kind,
                parent_id : asteriskToken.parent_id,
                parent_kind : asteriskToken.parent_kind,
                index : asteriskToken.index,
                location_id : asteriskToken.location_id,
            }
        }
        for (slashToken in SlashToken(db)) {
            yield MultiplicativeOperator {
                id : slashToken.id,
                kind : slashToken.kind,
                parent_id : slashToken.parent_id,
                parent_kind : slashToken.parent_kind,
                index : slashToken.index,
                location_id : slashToken.location_id,
            }
        }
        for (percentToken in PercentToken(db)) {
            yield MultiplicativeOperator {
                id : percentToken.id,
                kind : percentToken.kind,
                parent_id : percentToken.parent_id,
                parent_kind : percentToken.parent_kind,
                index : percentToken.index,
                location_id : percentToken.location_id,
            }
        }
    }

    /**
     * Get primary key.
     */
    pub fn getPrimaryKey(self) -> int {
        return self.id
    }
    
    /**
     * trans to AsteriskToken
     */
    pub fn toAsteriskToken(self) -> AsteriskToken {
        for (asteriskToken in AsteriskToken(__all_data__)) {
            if (asteriskToken.key_eq(self)) {
                return asteriskToken
            }
        }
    }
    
    /**
     * trans to SlashToken
     */
    pub fn toSlashToken(self) -> SlashToken {
        for (slashToken in SlashToken(__all_data__)) {
            if (slashToken.key_eq(self)) {
                return slashToken
            }
        }
    }
    
    /**
     * trans to PercentToken
     */
    pub fn toPercentToken(self) -> PercentToken {
        for (percentToken in PercentToken(__all_data__)) {
            if (percentToken.key_eq(self)) {
                return percentToken
            }
        }
    }
    
}

/**
 * This type consists of the following types: [AsteriskAsteriskToken, AsteriskToken, SlashToken, PercentToken]
 */
schema MultiplicativeOperatorOrHigher extends AstNode {
}

impl MultiplicativeOperatorOrHigher {
    @data_constraint
    @inline
    pub fn __all__(db: ArkTsDB) -> *MultiplicativeOperatorOrHigher {
        for (asteriskAsteriskToken in AsteriskAsteriskToken(db)) {
            yield MultiplicativeOperatorOrHigher {
                id : asteriskAsteriskToken.id,
                kind : asteriskAsteriskToken.kind,
                parent_id : asteriskAsteriskToken.parent_id,
                parent_kind : asteriskAsteriskToken.parent_kind,
                index : asteriskAsteriskToken.index,
                location_id : asteriskAsteriskToken.location_id,
            }
        }
        for (asteriskToken in AsteriskToken(db)) {
            yield MultiplicativeOperatorOrHigher {
                id : asteriskToken.id,
                kind : asteriskToken.kind,
                parent_id : asteriskToken.parent_id,
                parent_kind : asteriskToken.parent_kind,
                index : asteriskToken.index,
                location_id : asteriskToken.location_id,
            }
        }
        for (slashToken in SlashToken(db)) {
            yield MultiplicativeOperatorOrHigher {
                id : slashToken.id,
                kind : slashToken.kind,
                parent_id : slashToken.parent_id,
                parent_kind : slashToken.parent_kind,
                index : slashToken.index,
                location_id : slashToken.location_id,
            }
        }
        for (percentToken in PercentToken(db)) {
            yield MultiplicativeOperatorOrHigher {
                id : percentToken.id,
                kind : percentToken.kind,
                parent_id : percentToken.parent_id,
                parent_kind : percentToken.parent_kind,
                index : percentToken.index,
                location_id : percentToken.location_id,
            }
        }
    }

    /**
     * Get primary key.
     */
    pub fn getPrimaryKey(self) -> int {
        return self.id
    }
    
    /**
     * trans to AsteriskAsteriskToken
     */
    pub fn toAsteriskAsteriskToken(self) -> AsteriskAsteriskToken {
        for (asteriskAsteriskToken in AsteriskAsteriskToken(__all_data__)) {
            if (asteriskAsteriskToken.key_eq(self)) {
                return asteriskAsteriskToken
            }
        }
    }
    
    /**
     * trans to AsteriskToken
     */
    pub fn toAsteriskToken(self) -> AsteriskToken {
        for (asteriskToken in AsteriskToken(__all_data__)) {
            if (asteriskToken.key_eq(self)) {
                return asteriskToken
            }
        }
    }
    
    /**
     * trans to SlashToken
     */
    pub fn toSlashToken(self) -> SlashToken {
        for (slashToken in SlashToken(__all_data__)) {
            if (slashToken.key_eq(self)) {
                return slashToken
            }
        }
    }
    
    /**
     * trans to PercentToken
     */
    pub fn toPercentToken(self) -> PercentToken {
        for (percentToken in PercentToken(__all_data__)) {
            if (percentToken.key_eq(self)) {
                return percentToken
            }
        }
    }
    
}

/**
 * This type consists of the following types: [PlusToken, MinusToken]
 */
schema AdditiveOperator extends AstNode {
}

impl AdditiveOperator {
    @data_constraint
    @inline
    pub fn __all__(db: ArkTsDB) -> *AdditiveOperator {
        for (plusToken in PlusToken(db)) {
            yield AdditiveOperator {
                id : plusToken.id,
                kind : plusToken.kind,
                parent_id : plusToken.parent_id,
                parent_kind : plusToken.parent_kind,
                index : plusToken.index,
                location_id : plusToken.location_id,
            }
        }
        for (minusToken in MinusToken(db)) {
            yield AdditiveOperator {
                id : minusToken.id,
                kind : minusToken.kind,
                parent_id : minusToken.parent_id,
                parent_kind : minusToken.parent_kind,
                index : minusToken.index,
                location_id : minusToken.location_id,
            }
        }
    }

    /**
     * Get primary key.
     */
    pub fn getPrimaryKey(self) -> int {
        return self.id
    }
    
    /**
     * trans to PlusToken
     */
    pub fn toPlusToken(self) -> PlusToken {
        for (plusToken in PlusToken(__all_data__)) {
            if (plusToken.key_eq(self)) {
                return plusToken
            }
        }
    }
    
    /**
     * trans to MinusToken
     */
    pub fn toMinusToken(self) -> MinusToken {
        for (minusToken in MinusToken(__all_data__)) {
            if (minusToken.key_eq(self)) {
                return minusToken
            }
        }
    }
    
}

/**
 * This type consists of the following types: [AsteriskAsteriskToken, AsteriskToken, SlashToken, PercentToken, PlusToken, MinusToken]
 */
schema AdditiveOperatorOrHigher extends AstNode {
}

impl AdditiveOperatorOrHigher {
    @data_constraint
    @inline
    pub fn __all__(db: ArkTsDB) -> *AdditiveOperatorOrHigher {
        for (asteriskAsteriskToken in AsteriskAsteriskToken(db)) {
            yield AdditiveOperatorOrHigher {
                id : asteriskAsteriskToken.id,
                kind : asteriskAsteriskToken.kind,
                parent_id : asteriskAsteriskToken.parent_id,
                parent_kind : asteriskAsteriskToken.parent_kind,
                index : asteriskAsteriskToken.index,
                location_id : asteriskAsteriskToken.location_id,
            }
        }
        for (asteriskToken in AsteriskToken(db)) {
            yield AdditiveOperatorOrHigher {
                id : asteriskToken.id,
                kind : asteriskToken.kind,
                parent_id : asteriskToken.parent_id,
                parent_kind : asteriskToken.parent_kind,
                index : asteriskToken.index,
                location_id : asteriskToken.location_id,
            }
        }
        for (slashToken in SlashToken(db)) {
            yield AdditiveOperatorOrHigher {
                id : slashToken.id,
                kind : slashToken.kind,
                parent_id : slashToken.parent_id,
                parent_kind : slashToken.parent_kind,
                index : slashToken.index,
                location_id : slashToken.location_id,
            }
        }
        for (percentToken in PercentToken(db)) {
            yield AdditiveOperatorOrHigher {
                id : percentToken.id,
                kind : percentToken.kind,
                parent_id : percentToken.parent_id,
                parent_kind : percentToken.parent_kind,
                index : percentToken.index,
                location_id : percentToken.location_id,
            }
        }
        for (plusToken in PlusToken(db)) {
            yield AdditiveOperatorOrHigher {
                id : plusToken.id,
                kind : plusToken.kind,
                parent_id : plusToken.parent_id,
                parent_kind : plusToken.parent_kind,
                index : plusToken.index,
                location_id : plusToken.location_id,
            }
        }
        for (minusToken in MinusToken(db)) {
            yield AdditiveOperatorOrHigher {
                id : minusToken.id,
                kind : minusToken.kind,
                parent_id : minusToken.parent_id,
                parent_kind : minusToken.parent_kind,
                index : minusToken.index,
                location_id : minusToken.location_id,
            }
        }
    }

    /**
     * Get primary key.
     */
    pub fn getPrimaryKey(self) -> int {
        return self.id
    }
    
    /**
     * trans to AsteriskAsteriskToken
     */
    pub fn toAsteriskAsteriskToken(self) -> AsteriskAsteriskToken {
        for (asteriskAsteriskToken in AsteriskAsteriskToken(__all_data__)) {
            if (asteriskAsteriskToken.key_eq(self)) {
                return asteriskAsteriskToken
            }
        }
    }
    
    /**
     * trans to AsteriskToken
     */
    pub fn toAsteriskToken(self) -> AsteriskToken {
        for (asteriskToken in AsteriskToken(__all_data__)) {
            if (asteriskToken.key_eq(self)) {
                return asteriskToken
            }
        }
    }
    
    /**
     * trans to SlashToken
     */
    pub fn toSlashToken(self) -> SlashToken {
        for (slashToken in SlashToken(__all_data__)) {
            if (slashToken.key_eq(self)) {
                return slashToken
            }
        }
    }
    
    /**
     * trans to PercentToken
     */
    pub fn toPercentToken(self) -> PercentToken {
        for (percentToken in PercentToken(__all_data__)) {
            if (percentToken.key_eq(self)) {
                return percentToken
            }
        }
    }
    
    /**
     * trans to PlusToken
     */
    pub fn toPlusToken(self) -> PlusToken {
        for (plusToken in PlusToken(__all_data__)) {
            if (plusToken.key_eq(self)) {
                return plusToken
            }
        }
    }
    
    /**
     * trans to MinusToken
     */
    pub fn toMinusToken(self) -> MinusToken {
        for (minusToken in MinusToken(__all_data__)) {
            if (minusToken.key_eq(self)) {
                return minusToken
            }
        }
    }
    
}

/**
 * This type consists of the following types: [LessThanLessThanToken, GreaterThanGreaterThanToken, GreaterThanGreaterThanGreaterThanToken]
 */
schema ShiftOperator extends AstNode {
}

impl ShiftOperator {
    @data_constraint
    @inline
    pub fn __all__(db: ArkTsDB) -> *ShiftOperator {
        for (lessThanLessThanToken in LessThanLessThanToken(db)) {
            yield ShiftOperator {
                id : lessThanLessThanToken.id,
                kind : lessThanLessThanToken.kind,
                parent_id : lessThanLessThanToken.parent_id,
                parent_kind : lessThanLessThanToken.parent_kind,
                index : lessThanLessThanToken.index,
                location_id : lessThanLessThanToken.location_id,
            }
        }
        for (greaterThanGreaterThanToken in GreaterThanGreaterThanToken(db)) {
            yield ShiftOperator {
                id : greaterThanGreaterThanToken.id,
                kind : greaterThanGreaterThanToken.kind,
                parent_id : greaterThanGreaterThanToken.parent_id,
                parent_kind : greaterThanGreaterThanToken.parent_kind,
                index : greaterThanGreaterThanToken.index,
                location_id : greaterThanGreaterThanToken.location_id,
            }
        }
        for (greaterThanGreaterThanGreaterThanToken in GreaterThanGreaterThanGreaterThanToken(db)) {
            yield ShiftOperator {
                id : greaterThanGreaterThanGreaterThanToken.id,
                kind : greaterThanGreaterThanGreaterThanToken.kind,
                parent_id : greaterThanGreaterThanGreaterThanToken.parent_id,
                parent_kind : greaterThanGreaterThanGreaterThanToken.parent_kind,
                index : greaterThanGreaterThanGreaterThanToken.index,
                location_id : greaterThanGreaterThanGreaterThanToken.location_id,
            }
        }
    }

    /**
     * Get primary key.
     */
    pub fn getPrimaryKey(self) -> int {
        return self.id
    }
    
    /**
     * trans to LessThanLessThanToken
     */
    pub fn toLessThanLessThanToken(self) -> LessThanLessThanToken {
        for (lessThanLessThanToken in LessThanLessThanToken(__all_data__)) {
            if (lessThanLessThanToken.key_eq(self)) {
                return lessThanLessThanToken
            }
        }
    }
    
    /**
     * trans to GreaterThanGreaterThanToken
     */
    pub fn toGreaterThanGreaterThanToken(self) -> GreaterThanGreaterThanToken {
        for (greaterThanGreaterThanToken in GreaterThanGreaterThanToken(__all_data__)) {
            if (greaterThanGreaterThanToken.key_eq(self)) {
                return greaterThanGreaterThanToken
            }
        }
    }
    
    /**
     * trans to GreaterThanGreaterThanGreaterThanToken
     */
    pub fn toGreaterThanGreaterThanGreaterThanToken(self) -> GreaterThanGreaterThanGreaterThanToken {
        for (greaterThanGreaterThanGreaterThanToken in GreaterThanGreaterThanGreaterThanToken(__all_data__)) {
            if (greaterThanGreaterThanGreaterThanToken.key_eq(self)) {
                return greaterThanGreaterThanGreaterThanToken
            }
        }
    }
    
}

/**
 * This type consists of the following types: [AsteriskAsteriskToken, AsteriskToken, SlashToken, PercentToken, PlusToken, MinusToken, LessThanLessThanToken, GreaterThanGreaterThanToken, GreaterThanGreaterThanGreaterThanToken]
 */
schema ShiftOperatorOrHigher extends AstNode {
}

impl ShiftOperatorOrHigher {
    @data_constraint
    @inline
    pub fn __all__(db: ArkTsDB) -> *ShiftOperatorOrHigher {
        for (asteriskAsteriskToken in AsteriskAsteriskToken(db)) {
            yield ShiftOperatorOrHigher {
                id : asteriskAsteriskToken.id,
                kind : asteriskAsteriskToken.kind,
                parent_id : asteriskAsteriskToken.parent_id,
                parent_kind : asteriskAsteriskToken.parent_kind,
                index : asteriskAsteriskToken.index,
                location_id : asteriskAsteriskToken.location_id,
            }
        }
        for (asteriskToken in AsteriskToken(db)) {
            yield ShiftOperatorOrHigher {
                id : asteriskToken.id,
                kind : asteriskToken.kind,
                parent_id : asteriskToken.parent_id,
                parent_kind : asteriskToken.parent_kind,
                index : asteriskToken.index,
                location_id : asteriskToken.location_id,
            }
        }
        for (slashToken in SlashToken(db)) {
            yield ShiftOperatorOrHigher {
                id : slashToken.id,
                kind : slashToken.kind,
                parent_id : slashToken.parent_id,
                parent_kind : slashToken.parent_kind,
                index : slashToken.index,
                location_id : slashToken.location_id,
            }
        }
        for (percentToken in PercentToken(db)) {
            yield ShiftOperatorOrHigher {
                id : percentToken.id,
                kind : percentToken.kind,
                parent_id : percentToken.parent_id,
                parent_kind : percentToken.parent_kind,
                index : percentToken.index,
                location_id : percentToken.location_id,
            }
        }
        for (plusToken in PlusToken(db)) {
            yield ShiftOperatorOrHigher {
                id : plusToken.id,
                kind : plusToken.kind,
                parent_id : plusToken.parent_id,
                parent_kind : plusToken.parent_kind,
                index : plusToken.index,
                location_id : plusToken.location_id,
            }
        }
        for (minusToken in MinusToken(db)) {
            yield ShiftOperatorOrHigher {
                id : minusToken.id,
                kind : minusToken.kind,
                parent_id : minusToken.parent_id,
                parent_kind : minusToken.parent_kind,
                index : minusToken.index,
                location_id : minusToken.location_id,
            }
        }
        for (lessThanLessThanToken in LessThanLessThanToken(db)) {
            yield ShiftOperatorOrHigher {
                id : lessThanLessThanToken.id,
                kind : lessThanLessThanToken.kind,
                parent_id : lessThanLessThanToken.parent_id,
                parent_kind : lessThanLessThanToken.parent_kind,
                index : lessThanLessThanToken.index,
                location_id : lessThanLessThanToken.location_id,
            }
        }
        for (greaterThanGreaterThanToken in GreaterThanGreaterThanToken(db)) {
            yield ShiftOperatorOrHigher {
                id : greaterThanGreaterThanToken.id,
                kind : greaterThanGreaterThanToken.kind,
                parent_id : greaterThanGreaterThanToken.parent_id,
                parent_kind : greaterThanGreaterThanToken.parent_kind,
                index : greaterThanGreaterThanToken.index,
                location_id : greaterThanGreaterThanToken.location_id,
            }
        }
        for (greaterThanGreaterThanGreaterThanToken in GreaterThanGreaterThanGreaterThanToken(db)) {
            yield ShiftOperatorOrHigher {
                id : greaterThanGreaterThanGreaterThanToken.id,
                kind : greaterThanGreaterThanGreaterThanToken.kind,
                parent_id : greaterThanGreaterThanGreaterThanToken.parent_id,
                parent_kind : greaterThanGreaterThanGreaterThanToken.parent_kind,
                index : greaterThanGreaterThanGreaterThanToken.index,
                location_id : greaterThanGreaterThanGreaterThanToken.location_id,
            }
        }
    }

    /**
     * Get primary key.
     */
    pub fn getPrimaryKey(self) -> int {
        return self.id
    }
    
    /**
     * trans to AsteriskAsteriskToken
     */
    pub fn toAsteriskAsteriskToken(self) -> AsteriskAsteriskToken {
        for (asteriskAsteriskToken in AsteriskAsteriskToken(__all_data__)) {
            if (asteriskAsteriskToken.key_eq(self)) {
                return asteriskAsteriskToken
            }
        }
    }
    
    /**
     * trans to AsteriskToken
     */
    pub fn toAsteriskToken(self) -> AsteriskToken {
        for (asteriskToken in AsteriskToken(__all_data__)) {
            if (asteriskToken.key_eq(self)) {
                return asteriskToken
            }
        }
    }
    
    /**
     * trans to SlashToken
     */
    pub fn toSlashToken(self) -> SlashToken {
        for (slashToken in SlashToken(__all_data__)) {
            if (slashToken.key_eq(self)) {
                return slashToken
            }
        }
    }
    
    /**
     * trans to PercentToken
     */
    pub fn toPercentToken(self) -> PercentToken {
        for (percentToken in PercentToken(__all_data__)) {
            if (percentToken.key_eq(self)) {
                return percentToken
            }
        }
    }
    
    /**
     * trans to PlusToken
     */
    pub fn toPlusToken(self) -> PlusToken {
        for (plusToken in PlusToken(__all_data__)) {
            if (plusToken.key_eq(self)) {
                return plusToken
            }
        }
    }
    
    /**
     * trans to MinusToken
     */
    pub fn toMinusToken(self) -> MinusToken {
        for (minusToken in MinusToken(__all_data__)) {
            if (minusToken.key_eq(self)) {
                return minusToken
            }
        }
    }
    
    /**
     * trans to LessThanLessThanToken
     */
    pub fn toLessThanLessThanToken(self) -> LessThanLessThanToken {
        for (lessThanLessThanToken in LessThanLessThanToken(__all_data__)) {
            if (lessThanLessThanToken.key_eq(self)) {
                return lessThanLessThanToken
            }
        }
    }
    
    /**
     * trans to GreaterThanGreaterThanToken
     */
    pub fn toGreaterThanGreaterThanToken(self) -> GreaterThanGreaterThanToken {
        for (greaterThanGreaterThanToken in GreaterThanGreaterThanToken(__all_data__)) {
            if (greaterThanGreaterThanToken.key_eq(self)) {
                return greaterThanGreaterThanToken
            }
        }
    }
    
    /**
     * trans to GreaterThanGreaterThanGreaterThanToken
     */
    pub fn toGreaterThanGreaterThanGreaterThanToken(self) -> GreaterThanGreaterThanGreaterThanToken {
        for (greaterThanGreaterThanGreaterThanToken in GreaterThanGreaterThanGreaterThanToken(__all_data__)) {
            if (greaterThanGreaterThanGreaterThanToken.key_eq(self)) {
                return greaterThanGreaterThanGreaterThanToken
            }
        }
    }
    
}

/**
 * This type consists of the following types: [LessThanToken, LessThanEqualsToken, GreaterThanToken, GreaterThanEqualsToken, InstanceOfKeyword, InKeyword]
 */
schema RelationalOperator extends AstNode {
}

impl RelationalOperator {
    @data_constraint
    @inline
    pub fn __all__(db: ArkTsDB) -> *RelationalOperator {
        for (lessThanToken in LessThanToken(db)) {
            yield RelationalOperator {
                id : lessThanToken.id,
                kind : lessThanToken.kind,
                parent_id : lessThanToken.parent_id,
                parent_kind : lessThanToken.parent_kind,
                index : lessThanToken.index,
                location_id : lessThanToken.location_id,
            }
        }
        for (lessThanEqualsToken in LessThanEqualsToken(db)) {
            yield RelationalOperator {
                id : lessThanEqualsToken.id,
                kind : lessThanEqualsToken.kind,
                parent_id : lessThanEqualsToken.parent_id,
                parent_kind : lessThanEqualsToken.parent_kind,
                index : lessThanEqualsToken.index,
                location_id : lessThanEqualsToken.location_id,
            }
        }
        for (greaterThanToken in GreaterThanToken(db)) {
            yield RelationalOperator {
                id : greaterThanToken.id,
                kind : greaterThanToken.kind,
                parent_id : greaterThanToken.parent_id,
                parent_kind : greaterThanToken.parent_kind,
                index : greaterThanToken.index,
                location_id : greaterThanToken.location_id,
            }
        }
        for (greaterThanEqualsToken in GreaterThanEqualsToken(db)) {
            yield RelationalOperator {
                id : greaterThanEqualsToken.id,
                kind : greaterThanEqualsToken.kind,
                parent_id : greaterThanEqualsToken.parent_id,
                parent_kind : greaterThanEqualsToken.parent_kind,
                index : greaterThanEqualsToken.index,
                location_id : greaterThanEqualsToken.location_id,
            }
        }
        for (instanceOfKeyword in InstanceOfKeyword(db)) {
            yield RelationalOperator {
                id : instanceOfKeyword.id,
                kind : instanceOfKeyword.kind,
                parent_id : instanceOfKeyword.parent_id,
                parent_kind : instanceOfKeyword.parent_kind,
                index : instanceOfKeyword.index,
                location_id : instanceOfKeyword.location_id,
            }
        }
        for (inKeyword in InKeyword(db)) {
            yield RelationalOperator {
                id : inKeyword.id,
                kind : inKeyword.kind,
                parent_id : inKeyword.parent_id,
                parent_kind : inKeyword.parent_kind,
                index : inKeyword.index,
                location_id : inKeyword.location_id,
            }
        }
    }

    /**
     * Get primary key.
     */
    pub fn getPrimaryKey(self) -> int {
        return self.id
    }
    
    /**
     * trans to LessThanToken
     */
    pub fn toLessThanToken(self) -> LessThanToken {
        for (lessThanToken in LessThanToken(__all_data__)) {
            if (lessThanToken.key_eq(self)) {
                return lessThanToken
            }
        }
    }
    
    /**
     * trans to LessThanEqualsToken
     */
    pub fn toLessThanEqualsToken(self) -> LessThanEqualsToken {
        for (lessThanEqualsToken in LessThanEqualsToken(__all_data__)) {
            if (lessThanEqualsToken.key_eq(self)) {
                return lessThanEqualsToken
            }
        }
    }
    
    /**
     * trans to GreaterThanToken
     */
    pub fn toGreaterThanToken(self) -> GreaterThanToken {
        for (greaterThanToken in GreaterThanToken(__all_data__)) {
            if (greaterThanToken.key_eq(self)) {
                return greaterThanToken
            }
        }
    }
    
    /**
     * trans to GreaterThanEqualsToken
     */
    pub fn toGreaterThanEqualsToken(self) -> GreaterThanEqualsToken {
        for (greaterThanEqualsToken in GreaterThanEqualsToken(__all_data__)) {
            if (greaterThanEqualsToken.key_eq(self)) {
                return greaterThanEqualsToken
            }
        }
    }
    
    /**
     * trans to InstanceOfKeyword
     */
    pub fn toInstanceOfKeyword(self) -> InstanceOfKeyword {
        for (instanceOfKeyword in InstanceOfKeyword(__all_data__)) {
            if (instanceOfKeyword.key_eq(self)) {
                return instanceOfKeyword
            }
        }
    }
    
    /**
     * trans to InKeyword
     */
    pub fn toInKeyword(self) -> InKeyword {
        for (inKeyword in InKeyword(__all_data__)) {
            if (inKeyword.key_eq(self)) {
                return inKeyword
            }
        }
    }
    
}

/**
 * This type consists of the following types: [AsteriskAsteriskToken, AsteriskToken, SlashToken, PercentToken, PlusToken, MinusToken, LessThanLessThanToken, GreaterThanGreaterThanToken, GreaterThanGreaterThanGreaterThanToken, LessThanToken, LessThanEqualsToken, GreaterThanToken, GreaterThanEqualsToken, InstanceOfKeyword, InKeyword]
 */
schema RelationalOperatorOrHigher extends AstNode {
}

impl RelationalOperatorOrHigher {
    @data_constraint
    @inline
    pub fn __all__(db: ArkTsDB) -> *RelationalOperatorOrHigher {
        for (asteriskAsteriskToken in AsteriskAsteriskToken(db)) {
            yield RelationalOperatorOrHigher {
                id : asteriskAsteriskToken.id,
                kind : asteriskAsteriskToken.kind,
                parent_id : asteriskAsteriskToken.parent_id,
                parent_kind : asteriskAsteriskToken.parent_kind,
                index : asteriskAsteriskToken.index,
                location_id : asteriskAsteriskToken.location_id,
            }
        }
        for (asteriskToken in AsteriskToken(db)) {
            yield RelationalOperatorOrHigher {
                id : asteriskToken.id,
                kind : asteriskToken.kind,
                parent_id : asteriskToken.parent_id,
                parent_kind : asteriskToken.parent_kind,
                index : asteriskToken.index,
                location_id : asteriskToken.location_id,
            }
        }
        for (slashToken in SlashToken(db)) {
            yield RelationalOperatorOrHigher {
                id : slashToken.id,
                kind : slashToken.kind,
                parent_id : slashToken.parent_id,
                parent_kind : slashToken.parent_kind,
                index : slashToken.index,
                location_id : slashToken.location_id,
            }
        }
        for (percentToken in PercentToken(db)) {
            yield RelationalOperatorOrHigher {
                id : percentToken.id,
                kind : percentToken.kind,
                parent_id : percentToken.parent_id,
                parent_kind : percentToken.parent_kind,
                index : percentToken.index,
                location_id : percentToken.location_id,
            }
        }
        for (plusToken in PlusToken(db)) {
            yield RelationalOperatorOrHigher {
                id : plusToken.id,
                kind : plusToken.kind,
                parent_id : plusToken.parent_id,
                parent_kind : plusToken.parent_kind,
                index : plusToken.index,
                location_id : plusToken.location_id,
            }
        }
        for (minusToken in MinusToken(db)) {
            yield RelationalOperatorOrHigher {
                id : minusToken.id,
                kind : minusToken.kind,
                parent_id : minusToken.parent_id,
                parent_kind : minusToken.parent_kind,
                index : minusToken.index,
                location_id : minusToken.location_id,
            }
        }
        for (lessThanLessThanToken in LessThanLessThanToken(db)) {
            yield RelationalOperatorOrHigher {
                id : lessThanLessThanToken.id,
                kind : lessThanLessThanToken.kind,
                parent_id : lessThanLessThanToken.parent_id,
                parent_kind : lessThanLessThanToken.parent_kind,
                index : lessThanLessThanToken.index,
                location_id : lessThanLessThanToken.location_id,
            }
        }
        for (greaterThanGreaterThanToken in GreaterThanGreaterThanToken(db)) {
            yield RelationalOperatorOrHigher {
                id : greaterThanGreaterThanToken.id,
                kind : greaterThanGreaterThanToken.kind,
                parent_id : greaterThanGreaterThanToken.parent_id,
                parent_kind : greaterThanGreaterThanToken.parent_kind,
                index : greaterThanGreaterThanToken.index,
                location_id : greaterThanGreaterThanToken.location_id,
            }
        }
        for (greaterThanGreaterThanGreaterThanToken in GreaterThanGreaterThanGreaterThanToken(db)) {
            yield RelationalOperatorOrHigher {
                id : greaterThanGreaterThanGreaterThanToken.id,
                kind : greaterThanGreaterThanGreaterThanToken.kind,
                parent_id : greaterThanGreaterThanGreaterThanToken.parent_id,
                parent_kind : greaterThanGreaterThanGreaterThanToken.parent_kind,
                index : greaterThanGreaterThanGreaterThanToken.index,
                location_id : greaterThanGreaterThanGreaterThanToken.location_id,
            }
        }
        for (lessThanToken in LessThanToken(db)) {
            yield RelationalOperatorOrHigher {
                id : lessThanToken.id,
                kind : lessThanToken.kind,
                parent_id : lessThanToken.parent_id,
                parent_kind : lessThanToken.parent_kind,
                index : lessThanToken.index,
                location_id : lessThanToken.location_id,
            }
        }
        for (lessThanEqualsToken in LessThanEqualsToken(db)) {
            yield RelationalOperatorOrHigher {
                id : lessThanEqualsToken.id,
                kind : lessThanEqualsToken.kind,
                parent_id : lessThanEqualsToken.parent_id,
                parent_kind : lessThanEqualsToken.parent_kind,
                index : lessThanEqualsToken.index,
                location_id : lessThanEqualsToken.location_id,
            }
        }
        for (greaterThanToken in GreaterThanToken(db)) {
            yield RelationalOperatorOrHigher {
                id : greaterThanToken.id,
                kind : greaterThanToken.kind,
                parent_id : greaterThanToken.parent_id,
                parent_kind : greaterThanToken.parent_kind,
                index : greaterThanToken.index,
                location_id : greaterThanToken.location_id,
            }
        }
        for (greaterThanEqualsToken in GreaterThanEqualsToken(db)) {
            yield RelationalOperatorOrHigher {
                id : greaterThanEqualsToken.id,
                kind : greaterThanEqualsToken.kind,
                parent_id : greaterThanEqualsToken.parent_id,
                parent_kind : greaterThanEqualsToken.parent_kind,
                index : greaterThanEqualsToken.index,
                location_id : greaterThanEqualsToken.location_id,
            }
        }
        for (instanceOfKeyword in InstanceOfKeyword(db)) {
            yield RelationalOperatorOrHigher {
                id : instanceOfKeyword.id,
                kind : instanceOfKeyword.kind,
                parent_id : instanceOfKeyword.parent_id,
                parent_kind : instanceOfKeyword.parent_kind,
                index : instanceOfKeyword.index,
                location_id : instanceOfKeyword.location_id,
            }
        }
        for (inKeyword in InKeyword(db)) {
            yield RelationalOperatorOrHigher {
                id : inKeyword.id,
                kind : inKeyword.kind,
                parent_id : inKeyword.parent_id,
                parent_kind : inKeyword.parent_kind,
                index : inKeyword.index,
                location_id : inKeyword.location_id,
            }
        }
    }

    /**
     * Get primary key.
     */
    pub fn getPrimaryKey(self) -> int {
        return self.id
    }
    
    /**
     * trans to AsteriskAsteriskToken
     */
    pub fn toAsteriskAsteriskToken(self) -> AsteriskAsteriskToken {
        for (asteriskAsteriskToken in AsteriskAsteriskToken(__all_data__)) {
            if (asteriskAsteriskToken.key_eq(self)) {
                return asteriskAsteriskToken
            }
        }
    }
    
    /**
     * trans to AsteriskToken
     */
    pub fn toAsteriskToken(self) -> AsteriskToken {
        for (asteriskToken in AsteriskToken(__all_data__)) {
            if (asteriskToken.key_eq(self)) {
                return asteriskToken
            }
        }
    }
    
    /**
     * trans to SlashToken
     */
    pub fn toSlashToken(self) -> SlashToken {
        for (slashToken in SlashToken(__all_data__)) {
            if (slashToken.key_eq(self)) {
                return slashToken
            }
        }
    }
    
    /**
     * trans to PercentToken
     */
    pub fn toPercentToken(self) -> PercentToken {
        for (percentToken in PercentToken(__all_data__)) {
            if (percentToken.key_eq(self)) {
                return percentToken
            }
        }
    }
    
    /**
     * trans to PlusToken
     */
    pub fn toPlusToken(self) -> PlusToken {
        for (plusToken in PlusToken(__all_data__)) {
            if (plusToken.key_eq(self)) {
                return plusToken
            }
        }
    }
    
    /**
     * trans to MinusToken
     */
    pub fn toMinusToken(self) -> MinusToken {
        for (minusToken in MinusToken(__all_data__)) {
            if (minusToken.key_eq(self)) {
                return minusToken
            }
        }
    }
    
    /**
     * trans to LessThanLessThanToken
     */
    pub fn toLessThanLessThanToken(self) -> LessThanLessThanToken {
        for (lessThanLessThanToken in LessThanLessThanToken(__all_data__)) {
            if (lessThanLessThanToken.key_eq(self)) {
                return lessThanLessThanToken
            }
        }
    }
    
    /**
     * trans to GreaterThanGreaterThanToken
     */
    pub fn toGreaterThanGreaterThanToken(self) -> GreaterThanGreaterThanToken {
        for (greaterThanGreaterThanToken in GreaterThanGreaterThanToken(__all_data__)) {
            if (greaterThanGreaterThanToken.key_eq(self)) {
                return greaterThanGreaterThanToken
            }
        }
    }
    
    /**
     * trans to GreaterThanGreaterThanGreaterThanToken
     */
    pub fn toGreaterThanGreaterThanGreaterThanToken(self) -> GreaterThanGreaterThanGreaterThanToken {
        for (greaterThanGreaterThanGreaterThanToken in GreaterThanGreaterThanGreaterThanToken(__all_data__)) {
            if (greaterThanGreaterThanGreaterThanToken.key_eq(self)) {
                return greaterThanGreaterThanGreaterThanToken
            }
        }
    }
    
    /**
     * trans to LessThanToken
     */
    pub fn toLessThanToken(self) -> LessThanToken {
        for (lessThanToken in LessThanToken(__all_data__)) {
            if (lessThanToken.key_eq(self)) {
                return lessThanToken
            }
        }
    }
    
    /**
     * trans to LessThanEqualsToken
     */
    pub fn toLessThanEqualsToken(self) -> LessThanEqualsToken {
        for (lessThanEqualsToken in LessThanEqualsToken(__all_data__)) {
            if (lessThanEqualsToken.key_eq(self)) {
                return lessThanEqualsToken
            }
        }
    }
    
    /**
     * trans to GreaterThanToken
     */
    pub fn toGreaterThanToken(self) -> GreaterThanToken {
        for (greaterThanToken in GreaterThanToken(__all_data__)) {
            if (greaterThanToken.key_eq(self)) {
                return greaterThanToken
            }
        }
    }
    
    /**
     * trans to GreaterThanEqualsToken
     */
    pub fn toGreaterThanEqualsToken(self) -> GreaterThanEqualsToken {
        for (greaterThanEqualsToken in GreaterThanEqualsToken(__all_data__)) {
            if (greaterThanEqualsToken.key_eq(self)) {
                return greaterThanEqualsToken
            }
        }
    }
    
    /**
     * trans to InstanceOfKeyword
     */
    pub fn toInstanceOfKeyword(self) -> InstanceOfKeyword {
        for (instanceOfKeyword in InstanceOfKeyword(__all_data__)) {
            if (instanceOfKeyword.key_eq(self)) {
                return instanceOfKeyword
            }
        }
    }
    
    /**
     * trans to InKeyword
     */
    pub fn toInKeyword(self) -> InKeyword {
        for (inKeyword in InKeyword(__all_data__)) {
            if (inKeyword.key_eq(self)) {
                return inKeyword
            }
        }
    }
    
}

/**
 * This type consists of the following types: [EqualsEqualsToken, EqualsEqualsEqualsToken, ExclamationEqualsEqualsToken, ExclamationEqualsToken]
 */
schema EqualityOperator extends AstNode {
}

impl EqualityOperator {
    @data_constraint
    @inline
    pub fn __all__(db: ArkTsDB) -> *EqualityOperator {
        for (equalsEqualsToken in EqualsEqualsToken(db)) {
            yield EqualityOperator {
                id : equalsEqualsToken.id,
                kind : equalsEqualsToken.kind,
                parent_id : equalsEqualsToken.parent_id,
                parent_kind : equalsEqualsToken.parent_kind,
                index : equalsEqualsToken.index,
                location_id : equalsEqualsToken.location_id,
            }
        }
        for (equalsEqualsEqualsToken in EqualsEqualsEqualsToken(db)) {
            yield EqualityOperator {
                id : equalsEqualsEqualsToken.id,
                kind : equalsEqualsEqualsToken.kind,
                parent_id : equalsEqualsEqualsToken.parent_id,
                parent_kind : equalsEqualsEqualsToken.parent_kind,
                index : equalsEqualsEqualsToken.index,
                location_id : equalsEqualsEqualsToken.location_id,
            }
        }
        for (exclamationEqualsEqualsToken in ExclamationEqualsEqualsToken(db)) {
            yield EqualityOperator {
                id : exclamationEqualsEqualsToken.id,
                kind : exclamationEqualsEqualsToken.kind,
                parent_id : exclamationEqualsEqualsToken.parent_id,
                parent_kind : exclamationEqualsEqualsToken.parent_kind,
                index : exclamationEqualsEqualsToken.index,
                location_id : exclamationEqualsEqualsToken.location_id,
            }
        }
        for (exclamationEqualsToken in ExclamationEqualsToken(db)) {
            yield EqualityOperator {
                id : exclamationEqualsToken.id,
                kind : exclamationEqualsToken.kind,
                parent_id : exclamationEqualsToken.parent_id,
                parent_kind : exclamationEqualsToken.parent_kind,
                index : exclamationEqualsToken.index,
                location_id : exclamationEqualsToken.location_id,
            }
        }
    }

    /**
     * Get primary key.
     */
    pub fn getPrimaryKey(self) -> int {
        return self.id
    }
    
    /**
     * trans to EqualsEqualsToken
     */
    pub fn toEqualsEqualsToken(self) -> EqualsEqualsToken {
        for (equalsEqualsToken in EqualsEqualsToken(__all_data__)) {
            if (equalsEqualsToken.key_eq(self)) {
                return equalsEqualsToken
            }
        }
    }
    
    /**
     * trans to EqualsEqualsEqualsToken
     */
    pub fn toEqualsEqualsEqualsToken(self) -> EqualsEqualsEqualsToken {
        for (equalsEqualsEqualsToken in EqualsEqualsEqualsToken(__all_data__)) {
            if (equalsEqualsEqualsToken.key_eq(self)) {
                return equalsEqualsEqualsToken
            }
        }
    }
    
    /**
     * trans to ExclamationEqualsEqualsToken
     */
    pub fn toExclamationEqualsEqualsToken(self) -> ExclamationEqualsEqualsToken {
        for (exclamationEqualsEqualsToken in ExclamationEqualsEqualsToken(__all_data__)) {
            if (exclamationEqualsEqualsToken.key_eq(self)) {
                return exclamationEqualsEqualsToken
            }
        }
    }
    
    /**
     * trans to ExclamationEqualsToken
     */
    pub fn toExclamationEqualsToken(self) -> ExclamationEqualsToken {
        for (exclamationEqualsToken in ExclamationEqualsToken(__all_data__)) {
            if (exclamationEqualsToken.key_eq(self)) {
                return exclamationEqualsToken
            }
        }
    }
    
}

/**
 * This type consists of the following types: [AsteriskAsteriskToken, AsteriskToken, SlashToken, PercentToken, PlusToken, MinusToken, LessThanLessThanToken, GreaterThanGreaterThanToken, GreaterThanGreaterThanGreaterThanToken, LessThanToken, LessThanEqualsToken, GreaterThanToken, GreaterThanEqualsToken, InstanceOfKeyword, InKeyword, EqualsEqualsToken, EqualsEqualsEqualsToken, ExclamationEqualsEqualsToken, ExclamationEqualsToken]
 */
schema EqualityOperatorOrHigher extends AstNode {
}

impl EqualityOperatorOrHigher {
    @data_constraint
    @inline
    pub fn __all__(db: ArkTsDB) -> *EqualityOperatorOrHigher {
        for (asteriskAsteriskToken in AsteriskAsteriskToken(db)) {
            yield EqualityOperatorOrHigher {
                id : asteriskAsteriskToken.id,
                kind : asteriskAsteriskToken.kind,
                parent_id : asteriskAsteriskToken.parent_id,
                parent_kind : asteriskAsteriskToken.parent_kind,
                index : asteriskAsteriskToken.index,
                location_id : asteriskAsteriskToken.location_id,
            }
        }
        for (asteriskToken in AsteriskToken(db)) {
            yield EqualityOperatorOrHigher {
                id : asteriskToken.id,
                kind : asteriskToken.kind,
                parent_id : asteriskToken.parent_id,
                parent_kind : asteriskToken.parent_kind,
                index : asteriskToken.index,
                location_id : asteriskToken.location_id,
            }
        }
        for (slashToken in SlashToken(db)) {
            yield EqualityOperatorOrHigher {
                id : slashToken.id,
                kind : slashToken.kind,
                parent_id : slashToken.parent_id,
                parent_kind : slashToken.parent_kind,
                index : slashToken.index,
                location_id : slashToken.location_id,
            }
        }
        for (percentToken in PercentToken(db)) {
            yield EqualityOperatorOrHigher {
                id : percentToken.id,
                kind : percentToken.kind,
                parent_id : percentToken.parent_id,
                parent_kind : percentToken.parent_kind,
                index : percentToken.index,
                location_id : percentToken.location_id,
            }
        }
        for (plusToken in PlusToken(db)) {
            yield EqualityOperatorOrHigher {
                id : plusToken.id,
                kind : plusToken.kind,
                parent_id : plusToken.parent_id,
                parent_kind : plusToken.parent_kind,
                index : plusToken.index,
                location_id : plusToken.location_id,
            }
        }
        for (minusToken in MinusToken(db)) {
            yield EqualityOperatorOrHigher {
                id : minusToken.id,
                kind : minusToken.kind,
                parent_id : minusToken.parent_id,
                parent_kind : minusToken.parent_kind,
                index : minusToken.index,
                location_id : minusToken.location_id,
            }
        }
        for (lessThanLessThanToken in LessThanLessThanToken(db)) {
            yield EqualityOperatorOrHigher {
                id : lessThanLessThanToken.id,
                kind : lessThanLessThanToken.kind,
                parent_id : lessThanLessThanToken.parent_id,
                parent_kind : lessThanLessThanToken.parent_kind,
                index : lessThanLessThanToken.index,
                location_id : lessThanLessThanToken.location_id,
            }
        }
        for (greaterThanGreaterThanToken in GreaterThanGreaterThanToken(db)) {
            yield EqualityOperatorOrHigher {
                id : greaterThanGreaterThanToken.id,
                kind : greaterThanGreaterThanToken.kind,
                parent_id : greaterThanGreaterThanToken.parent_id,
                parent_kind : greaterThanGreaterThanToken.parent_kind,
                index : greaterThanGreaterThanToken.index,
                location_id : greaterThanGreaterThanToken.location_id,
            }
        }
        for (greaterThanGreaterThanGreaterThanToken in GreaterThanGreaterThanGreaterThanToken(db)) {
            yield EqualityOperatorOrHigher {
                id : greaterThanGreaterThanGreaterThanToken.id,
                kind : greaterThanGreaterThanGreaterThanToken.kind,
                parent_id : greaterThanGreaterThanGreaterThanToken.parent_id,
                parent_kind : greaterThanGreaterThanGreaterThanToken.parent_kind,
                index : greaterThanGreaterThanGreaterThanToken.index,
                location_id : greaterThanGreaterThanGreaterThanToken.location_id,
            }
        }
        for (lessThanToken in LessThanToken(db)) {
            yield EqualityOperatorOrHigher {
                id : lessThanToken.id,
                kind : lessThanToken.kind,
                parent_id : lessThanToken.parent_id,
                parent_kind : lessThanToken.parent_kind,
                index : lessThanToken.index,
                location_id : lessThanToken.location_id,
            }
        }
        for (lessThanEqualsToken in LessThanEqualsToken(db)) {
            yield EqualityOperatorOrHigher {
                id : lessThanEqualsToken.id,
                kind : lessThanEqualsToken.kind,
                parent_id : lessThanEqualsToken.parent_id,
                parent_kind : lessThanEqualsToken.parent_kind,
                index : lessThanEqualsToken.index,
                location_id : lessThanEqualsToken.location_id,
            }
        }
        for (greaterThanToken in GreaterThanToken(db)) {
            yield EqualityOperatorOrHigher {
                id : greaterThanToken.id,
                kind : greaterThanToken.kind,
                parent_id : greaterThanToken.parent_id,
                parent_kind : greaterThanToken.parent_kind,
                index : greaterThanToken.index,
                location_id : greaterThanToken.location_id,
            }
        }
        for (greaterThanEqualsToken in GreaterThanEqualsToken(db)) {
            yield EqualityOperatorOrHigher {
                id : greaterThanEqualsToken.id,
                kind : greaterThanEqualsToken.kind,
                parent_id : greaterThanEqualsToken.parent_id,
                parent_kind : greaterThanEqualsToken.parent_kind,
                index : greaterThanEqualsToken.index,
                location_id : greaterThanEqualsToken.location_id,
            }
        }
        for (instanceOfKeyword in InstanceOfKeyword(db)) {
            yield EqualityOperatorOrHigher {
                id : instanceOfKeyword.id,
                kind : instanceOfKeyword.kind,
                parent_id : instanceOfKeyword.parent_id,
                parent_kind : instanceOfKeyword.parent_kind,
                index : instanceOfKeyword.index,
                location_id : instanceOfKeyword.location_id,
            }
        }
        for (inKeyword in InKeyword(db)) {
            yield EqualityOperatorOrHigher {
                id : inKeyword.id,
                kind : inKeyword.kind,
                parent_id : inKeyword.parent_id,
                parent_kind : inKeyword.parent_kind,
                index : inKeyword.index,
                location_id : inKeyword.location_id,
            }
        }
        for (equalsEqualsToken in EqualsEqualsToken(db)) {
            yield EqualityOperatorOrHigher {
                id : equalsEqualsToken.id,
                kind : equalsEqualsToken.kind,
                parent_id : equalsEqualsToken.parent_id,
                parent_kind : equalsEqualsToken.parent_kind,
                index : equalsEqualsToken.index,
                location_id : equalsEqualsToken.location_id,
            }
        }
        for (equalsEqualsEqualsToken in EqualsEqualsEqualsToken(db)) {
            yield EqualityOperatorOrHigher {
                id : equalsEqualsEqualsToken.id,
                kind : equalsEqualsEqualsToken.kind,
                parent_id : equalsEqualsEqualsToken.parent_id,
                parent_kind : equalsEqualsEqualsToken.parent_kind,
                index : equalsEqualsEqualsToken.index,
                location_id : equalsEqualsEqualsToken.location_id,
            }
        }
        for (exclamationEqualsEqualsToken in ExclamationEqualsEqualsToken(db)) {
            yield EqualityOperatorOrHigher {
                id : exclamationEqualsEqualsToken.id,
                kind : exclamationEqualsEqualsToken.kind,
                parent_id : exclamationEqualsEqualsToken.parent_id,
                parent_kind : exclamationEqualsEqualsToken.parent_kind,
                index : exclamationEqualsEqualsToken.index,
                location_id : exclamationEqualsEqualsToken.location_id,
            }
        }
        for (exclamationEqualsToken in ExclamationEqualsToken(db)) {
            yield EqualityOperatorOrHigher {
                id : exclamationEqualsToken.id,
                kind : exclamationEqualsToken.kind,
                parent_id : exclamationEqualsToken.parent_id,
                parent_kind : exclamationEqualsToken.parent_kind,
                index : exclamationEqualsToken.index,
                location_id : exclamationEqualsToken.location_id,
            }
        }
    }

    /**
     * Get primary key.
     */
    pub fn getPrimaryKey(self) -> int {
        return self.id
    }
    
    /**
     * trans to AsteriskAsteriskToken
     */
    pub fn toAsteriskAsteriskToken(self) -> AsteriskAsteriskToken {
        for (asteriskAsteriskToken in AsteriskAsteriskToken(__all_data__)) {
            if (asteriskAsteriskToken.key_eq(self)) {
                return asteriskAsteriskToken
            }
        }
    }
    
    /**
     * trans to AsteriskToken
     */
    pub fn toAsteriskToken(self) -> AsteriskToken {
        for (asteriskToken in AsteriskToken(__all_data__)) {
            if (asteriskToken.key_eq(self)) {
                return asteriskToken
            }
        }
    }
    
    /**
     * trans to SlashToken
     */
    pub fn toSlashToken(self) -> SlashToken {
        for (slashToken in SlashToken(__all_data__)) {
            if (slashToken.key_eq(self)) {
                return slashToken
            }
        }
    }
    
    /**
     * trans to PercentToken
     */
    pub fn toPercentToken(self) -> PercentToken {
        for (percentToken in PercentToken(__all_data__)) {
            if (percentToken.key_eq(self)) {
                return percentToken
            }
        }
    }
    
    /**
     * trans to PlusToken
     */
    pub fn toPlusToken(self) -> PlusToken {
        for (plusToken in PlusToken(__all_data__)) {
            if (plusToken.key_eq(self)) {
                return plusToken
            }
        }
    }
    
    /**
     * trans to MinusToken
     */
    pub fn toMinusToken(self) -> MinusToken {
        for (minusToken in MinusToken(__all_data__)) {
            if (minusToken.key_eq(self)) {
                return minusToken
            }
        }
    }
    
    /**
     * trans to LessThanLessThanToken
     */
    pub fn toLessThanLessThanToken(self) -> LessThanLessThanToken {
        for (lessThanLessThanToken in LessThanLessThanToken(__all_data__)) {
            if (lessThanLessThanToken.key_eq(self)) {
                return lessThanLessThanToken
            }
        }
    }
    
    /**
     * trans to GreaterThanGreaterThanToken
     */
    pub fn toGreaterThanGreaterThanToken(self) -> GreaterThanGreaterThanToken {
        for (greaterThanGreaterThanToken in GreaterThanGreaterThanToken(__all_data__)) {
            if (greaterThanGreaterThanToken.key_eq(self)) {
                return greaterThanGreaterThanToken
            }
        }
    }
    
    /**
     * trans to GreaterThanGreaterThanGreaterThanToken
     */
    pub fn toGreaterThanGreaterThanGreaterThanToken(self) -> GreaterThanGreaterThanGreaterThanToken {
        for (greaterThanGreaterThanGreaterThanToken in GreaterThanGreaterThanGreaterThanToken(__all_data__)) {
            if (greaterThanGreaterThanGreaterThanToken.key_eq(self)) {
                return greaterThanGreaterThanGreaterThanToken
            }
        }
    }
    
    /**
     * trans to LessThanToken
     */
    pub fn toLessThanToken(self) -> LessThanToken {
        for (lessThanToken in LessThanToken(__all_data__)) {
            if (lessThanToken.key_eq(self)) {
                return lessThanToken
            }
        }
    }
    
    /**
     * trans to LessThanEqualsToken
     */
    pub fn toLessThanEqualsToken(self) -> LessThanEqualsToken {
        for (lessThanEqualsToken in LessThanEqualsToken(__all_data__)) {
            if (lessThanEqualsToken.key_eq(self)) {
                return lessThanEqualsToken
            }
        }
    }
    
    /**
     * trans to GreaterThanToken
     */
    pub fn toGreaterThanToken(self) -> GreaterThanToken {
        for (greaterThanToken in GreaterThanToken(__all_data__)) {
            if (greaterThanToken.key_eq(self)) {
                return greaterThanToken
            }
        }
    }
    
    /**
     * trans to GreaterThanEqualsToken
     */
    pub fn toGreaterThanEqualsToken(self) -> GreaterThanEqualsToken {
        for (greaterThanEqualsToken in GreaterThanEqualsToken(__all_data__)) {
            if (greaterThanEqualsToken.key_eq(self)) {
                return greaterThanEqualsToken
            }
        }
    }
    
    /**
     * trans to InstanceOfKeyword
     */
    pub fn toInstanceOfKeyword(self) -> InstanceOfKeyword {
        for (instanceOfKeyword in InstanceOfKeyword(__all_data__)) {
            if (instanceOfKeyword.key_eq(self)) {
                return instanceOfKeyword
            }
        }
    }
    
    /**
     * trans to InKeyword
     */
    pub fn toInKeyword(self) -> InKeyword {
        for (inKeyword in InKeyword(__all_data__)) {
            if (inKeyword.key_eq(self)) {
                return inKeyword
            }
        }
    }
    
    /**
     * trans to EqualsEqualsToken
     */
    pub fn toEqualsEqualsToken(self) -> EqualsEqualsToken {
        for (equalsEqualsToken in EqualsEqualsToken(__all_data__)) {
            if (equalsEqualsToken.key_eq(self)) {
                return equalsEqualsToken
            }
        }
    }
    
    /**
     * trans to EqualsEqualsEqualsToken
     */
    pub fn toEqualsEqualsEqualsToken(self) -> EqualsEqualsEqualsToken {
        for (equalsEqualsEqualsToken in EqualsEqualsEqualsToken(__all_data__)) {
            if (equalsEqualsEqualsToken.key_eq(self)) {
                return equalsEqualsEqualsToken
            }
        }
    }
    
    /**
     * trans to ExclamationEqualsEqualsToken
     */
    pub fn toExclamationEqualsEqualsToken(self) -> ExclamationEqualsEqualsToken {
        for (exclamationEqualsEqualsToken in ExclamationEqualsEqualsToken(__all_data__)) {
            if (exclamationEqualsEqualsToken.key_eq(self)) {
                return exclamationEqualsEqualsToken
            }
        }
    }
    
    /**
     * trans to ExclamationEqualsToken
     */
    pub fn toExclamationEqualsToken(self) -> ExclamationEqualsToken {
        for (exclamationEqualsToken in ExclamationEqualsToken(__all_data__)) {
            if (exclamationEqualsToken.key_eq(self)) {
                return exclamationEqualsToken
            }
        }
    }
    
}

/**
 * This type consists of the following types: [AmpersandToken, BarToken, CaretToken]
 */
schema BitwiseOperator extends AstNode {
}

impl BitwiseOperator {
    @data_constraint
    @inline
    pub fn __all__(db: ArkTsDB) -> *BitwiseOperator {
        for (ampersandToken in AmpersandToken(db)) {
            yield BitwiseOperator {
                id : ampersandToken.id,
                kind : ampersandToken.kind,
                parent_id : ampersandToken.parent_id,
                parent_kind : ampersandToken.parent_kind,
                index : ampersandToken.index,
                location_id : ampersandToken.location_id,
            }
        }
        for (barToken in BarToken(db)) {
            yield BitwiseOperator {
                id : barToken.id,
                kind : barToken.kind,
                parent_id : barToken.parent_id,
                parent_kind : barToken.parent_kind,
                index : barToken.index,
                location_id : barToken.location_id,
            }
        }
        for (caretToken in CaretToken(db)) {
            yield BitwiseOperator {
                id : caretToken.id,
                kind : caretToken.kind,
                parent_id : caretToken.parent_id,
                parent_kind : caretToken.parent_kind,
                index : caretToken.index,
                location_id : caretToken.location_id,
            }
        }
    }

    /**
     * Get primary key.
     */
    pub fn getPrimaryKey(self) -> int {
        return self.id
    }
    
    /**
     * trans to AmpersandToken
     */
    pub fn toAmpersandToken(self) -> AmpersandToken {
        for (ampersandToken in AmpersandToken(__all_data__)) {
            if (ampersandToken.key_eq(self)) {
                return ampersandToken
            }
        }
    }
    
    /**
     * trans to BarToken
     */
    pub fn toBarToken(self) -> BarToken {
        for (barToken in BarToken(__all_data__)) {
            if (barToken.key_eq(self)) {
                return barToken
            }
        }
    }
    
    /**
     * trans to CaretToken
     */
    pub fn toCaretToken(self) -> CaretToken {
        for (caretToken in CaretToken(__all_data__)) {
            if (caretToken.key_eq(self)) {
                return caretToken
            }
        }
    }
    
}

/**
 * This type consists of the following types: [AsteriskAsteriskToken, AsteriskToken, SlashToken, PercentToken, PlusToken, MinusToken, LessThanLessThanToken, GreaterThanGreaterThanToken, GreaterThanGreaterThanGreaterThanToken, LessThanToken, LessThanEqualsToken, GreaterThanToken, GreaterThanEqualsToken, InstanceOfKeyword, InKeyword, EqualsEqualsToken, EqualsEqualsEqualsToken, ExclamationEqualsEqualsToken, ExclamationEqualsToken, AmpersandToken, BarToken, CaretToken]
 */
schema BitwiseOperatorOrHigher extends AstNode {
}

impl BitwiseOperatorOrHigher {
    @data_constraint
    @inline
    pub fn __all__(db: ArkTsDB) -> *BitwiseOperatorOrHigher {
        for (asteriskAsteriskToken in AsteriskAsteriskToken(db)) {
            yield BitwiseOperatorOrHigher {
                id : asteriskAsteriskToken.id,
                kind : asteriskAsteriskToken.kind,
                parent_id : asteriskAsteriskToken.parent_id,
                parent_kind : asteriskAsteriskToken.parent_kind,
                index : asteriskAsteriskToken.index,
                location_id : asteriskAsteriskToken.location_id,
            }
        }
        for (asteriskToken in AsteriskToken(db)) {
            yield BitwiseOperatorOrHigher {
                id : asteriskToken.id,
                kind : asteriskToken.kind,
                parent_id : asteriskToken.parent_id,
                parent_kind : asteriskToken.parent_kind,
                index : asteriskToken.index,
                location_id : asteriskToken.location_id,
            }
        }
        for (slashToken in SlashToken(db)) {
            yield BitwiseOperatorOrHigher {
                id : slashToken.id,
                kind : slashToken.kind,
                parent_id : slashToken.parent_id,
                parent_kind : slashToken.parent_kind,
                index : slashToken.index,
                location_id : slashToken.location_id,
            }
        }
        for (percentToken in PercentToken(db)) {
            yield BitwiseOperatorOrHigher {
                id : percentToken.id,
                kind : percentToken.kind,
                parent_id : percentToken.parent_id,
                parent_kind : percentToken.parent_kind,
                index : percentToken.index,
                location_id : percentToken.location_id,
            }
        }
        for (plusToken in PlusToken(db)) {
            yield BitwiseOperatorOrHigher {
                id : plusToken.id,
                kind : plusToken.kind,
                parent_id : plusToken.parent_id,
                parent_kind : plusToken.parent_kind,
                index : plusToken.index,
                location_id : plusToken.location_id,
            }
        }
        for (minusToken in MinusToken(db)) {
            yield BitwiseOperatorOrHigher {
                id : minusToken.id,
                kind : minusToken.kind,
                parent_id : minusToken.parent_id,
                parent_kind : minusToken.parent_kind,
                index : minusToken.index,
                location_id : minusToken.location_id,
            }
        }
        for (lessThanLessThanToken in LessThanLessThanToken(db)) {
            yield BitwiseOperatorOrHigher {
                id : lessThanLessThanToken.id,
                kind : lessThanLessThanToken.kind,
                parent_id : lessThanLessThanToken.parent_id,
                parent_kind : lessThanLessThanToken.parent_kind,
                index : lessThanLessThanToken.index,
                location_id : lessThanLessThanToken.location_id,
            }
        }
        for (greaterThanGreaterThanToken in GreaterThanGreaterThanToken(db)) {
            yield BitwiseOperatorOrHigher {
                id : greaterThanGreaterThanToken.id,
                kind : greaterThanGreaterThanToken.kind,
                parent_id : greaterThanGreaterThanToken.parent_id,
                parent_kind : greaterThanGreaterThanToken.parent_kind,
                index : greaterThanGreaterThanToken.index,
                location_id : greaterThanGreaterThanToken.location_id,
            }
        }
        for (greaterThanGreaterThanGreaterThanToken in GreaterThanGreaterThanGreaterThanToken(db)) {
            yield BitwiseOperatorOrHigher {
                id : greaterThanGreaterThanGreaterThanToken.id,
                kind : greaterThanGreaterThanGreaterThanToken.kind,
                parent_id : greaterThanGreaterThanGreaterThanToken.parent_id,
                parent_kind : greaterThanGreaterThanGreaterThanToken.parent_kind,
                index : greaterThanGreaterThanGreaterThanToken.index,
                location_id : greaterThanGreaterThanGreaterThanToken.location_id,
            }
        }
        for (lessThanToken in LessThanToken(db)) {
            yield BitwiseOperatorOrHigher {
                id : lessThanToken.id,
                kind : lessThanToken.kind,
                parent_id : lessThanToken.parent_id,
                parent_kind : lessThanToken.parent_kind,
                index : lessThanToken.index,
                location_id : lessThanToken.location_id,
            }
        }
        for (lessThanEqualsToken in LessThanEqualsToken(db)) {
            yield BitwiseOperatorOrHigher {
                id : lessThanEqualsToken.id,
                kind : lessThanEqualsToken.kind,
                parent_id : lessThanEqualsToken.parent_id,
                parent_kind : lessThanEqualsToken.parent_kind,
                index : lessThanEqualsToken.index,
                location_id : lessThanEqualsToken.location_id,
            }
        }
        for (greaterThanToken in GreaterThanToken(db)) {
            yield BitwiseOperatorOrHigher {
                id : greaterThanToken.id,
                kind : greaterThanToken.kind,
                parent_id : greaterThanToken.parent_id,
                parent_kind : greaterThanToken.parent_kind,
                index : greaterThanToken.index,
                location_id : greaterThanToken.location_id,
            }
        }
        for (greaterThanEqualsToken in GreaterThanEqualsToken(db)) {
            yield BitwiseOperatorOrHigher {
                id : greaterThanEqualsToken.id,
                kind : greaterThanEqualsToken.kind,
                parent_id : greaterThanEqualsToken.parent_id,
                parent_kind : greaterThanEqualsToken.parent_kind,
                index : greaterThanEqualsToken.index,
                location_id : greaterThanEqualsToken.location_id,
            }
        }
        for (instanceOfKeyword in InstanceOfKeyword(db)) {
            yield BitwiseOperatorOrHigher {
                id : instanceOfKeyword.id,
                kind : instanceOfKeyword.kind,
                parent_id : instanceOfKeyword.parent_id,
                parent_kind : instanceOfKeyword.parent_kind,
                index : instanceOfKeyword.index,
                location_id : instanceOfKeyword.location_id,
            }
        }
        for (inKeyword in InKeyword(db)) {
            yield BitwiseOperatorOrHigher {
                id : inKeyword.id,
                kind : inKeyword.kind,
                parent_id : inKeyword.parent_id,
                parent_kind : inKeyword.parent_kind,
                index : inKeyword.index,
                location_id : inKeyword.location_id,
            }
        }
        for (equalsEqualsToken in EqualsEqualsToken(db)) {
            yield BitwiseOperatorOrHigher {
                id : equalsEqualsToken.id,
                kind : equalsEqualsToken.kind,
                parent_id : equalsEqualsToken.parent_id,
                parent_kind : equalsEqualsToken.parent_kind,
                index : equalsEqualsToken.index,
                location_id : equalsEqualsToken.location_id,
            }
        }
        for (equalsEqualsEqualsToken in EqualsEqualsEqualsToken(db)) {
            yield BitwiseOperatorOrHigher {
                id : equalsEqualsEqualsToken.id,
                kind : equalsEqualsEqualsToken.kind,
                parent_id : equalsEqualsEqualsToken.parent_id,
                parent_kind : equalsEqualsEqualsToken.parent_kind,
                index : equalsEqualsEqualsToken.index,
                location_id : equalsEqualsEqualsToken.location_id,
            }
        }
        for (exclamationEqualsEqualsToken in ExclamationEqualsEqualsToken(db)) {
            yield BitwiseOperatorOrHigher {
                id : exclamationEqualsEqualsToken.id,
                kind : exclamationEqualsEqualsToken.kind,
                parent_id : exclamationEqualsEqualsToken.parent_id,
                parent_kind : exclamationEqualsEqualsToken.parent_kind,
                index : exclamationEqualsEqualsToken.index,
                location_id : exclamationEqualsEqualsToken.location_id,
            }
        }
        for (exclamationEqualsToken in ExclamationEqualsToken(db)) {
            yield BitwiseOperatorOrHigher {
                id : exclamationEqualsToken.id,
                kind : exclamationEqualsToken.kind,
                parent_id : exclamationEqualsToken.parent_id,
                parent_kind : exclamationEqualsToken.parent_kind,
                index : exclamationEqualsToken.index,
                location_id : exclamationEqualsToken.location_id,
            }
        }
        for (ampersandToken in AmpersandToken(db)) {
            yield BitwiseOperatorOrHigher {
                id : ampersandToken.id,
                kind : ampersandToken.kind,
                parent_id : ampersandToken.parent_id,
                parent_kind : ampersandToken.parent_kind,
                index : ampersandToken.index,
                location_id : ampersandToken.location_id,
            }
        }
        for (barToken in BarToken(db)) {
            yield BitwiseOperatorOrHigher {
                id : barToken.id,
                kind : barToken.kind,
                parent_id : barToken.parent_id,
                parent_kind : barToken.parent_kind,
                index : barToken.index,
                location_id : barToken.location_id,
            }
        }
        for (caretToken in CaretToken(db)) {
            yield BitwiseOperatorOrHigher {
                id : caretToken.id,
                kind : caretToken.kind,
                parent_id : caretToken.parent_id,
                parent_kind : caretToken.parent_kind,
                index : caretToken.index,
                location_id : caretToken.location_id,
            }
        }
    }

    /**
     * Get primary key.
     */
    pub fn getPrimaryKey(self) -> int {
        return self.id
    }
    
    /**
     * trans to AsteriskAsteriskToken
     */
    pub fn toAsteriskAsteriskToken(self) -> AsteriskAsteriskToken {
        for (asteriskAsteriskToken in AsteriskAsteriskToken(__all_data__)) {
            if (asteriskAsteriskToken.key_eq(self)) {
                return asteriskAsteriskToken
            }
        }
    }
    
    /**
     * trans to AsteriskToken
     */
    pub fn toAsteriskToken(self) -> AsteriskToken {
        for (asteriskToken in AsteriskToken(__all_data__)) {
            if (asteriskToken.key_eq(self)) {
                return asteriskToken
            }
        }
    }
    
    /**
     * trans to SlashToken
     */
    pub fn toSlashToken(self) -> SlashToken {
        for (slashToken in SlashToken(__all_data__)) {
            if (slashToken.key_eq(self)) {
                return slashToken
            }
        }
    }
    
    /**
     * trans to PercentToken
     */
    pub fn toPercentToken(self) -> PercentToken {
        for (percentToken in PercentToken(__all_data__)) {
            if (percentToken.key_eq(self)) {
                return percentToken
            }
        }
    }
    
    /**
     * trans to PlusToken
     */
    pub fn toPlusToken(self) -> PlusToken {
        for (plusToken in PlusToken(__all_data__)) {
            if (plusToken.key_eq(self)) {
                return plusToken
            }
        }
    }
    
    /**
     * trans to MinusToken
     */
    pub fn toMinusToken(self) -> MinusToken {
        for (minusToken in MinusToken(__all_data__)) {
            if (minusToken.key_eq(self)) {
                return minusToken
            }
        }
    }
    
    /**
     * trans to LessThanLessThanToken
     */
    pub fn toLessThanLessThanToken(self) -> LessThanLessThanToken {
        for (lessThanLessThanToken in LessThanLessThanToken(__all_data__)) {
            if (lessThanLessThanToken.key_eq(self)) {
                return lessThanLessThanToken
            }
        }
    }
    
    /**
     * trans to GreaterThanGreaterThanToken
     */
    pub fn toGreaterThanGreaterThanToken(self) -> GreaterThanGreaterThanToken {
        for (greaterThanGreaterThanToken in GreaterThanGreaterThanToken(__all_data__)) {
            if (greaterThanGreaterThanToken.key_eq(self)) {
                return greaterThanGreaterThanToken
            }
        }
    }
    
    /**
     * trans to GreaterThanGreaterThanGreaterThanToken
     */
    pub fn toGreaterThanGreaterThanGreaterThanToken(self) -> GreaterThanGreaterThanGreaterThanToken {
        for (greaterThanGreaterThanGreaterThanToken in GreaterThanGreaterThanGreaterThanToken(__all_data__)) {
            if (greaterThanGreaterThanGreaterThanToken.key_eq(self)) {
                return greaterThanGreaterThanGreaterThanToken
            }
        }
    }
    
    /**
     * trans to LessThanToken
     */
    pub fn toLessThanToken(self) -> LessThanToken {
        for (lessThanToken in LessThanToken(__all_data__)) {
            if (lessThanToken.key_eq(self)) {
                return lessThanToken
            }
        }
    }
    
    /**
     * trans to LessThanEqualsToken
     */
    pub fn toLessThanEqualsToken(self) -> LessThanEqualsToken {
        for (lessThanEqualsToken in LessThanEqualsToken(__all_data__)) {
            if (lessThanEqualsToken.key_eq(self)) {
                return lessThanEqualsToken
            }
        }
    }
    
    /**
     * trans to GreaterThanToken
     */
    pub fn toGreaterThanToken(self) -> GreaterThanToken {
        for (greaterThanToken in GreaterThanToken(__all_data__)) {
            if (greaterThanToken.key_eq(self)) {
                return greaterThanToken
            }
        }
    }
    
    /**
     * trans to GreaterThanEqualsToken
     */
    pub fn toGreaterThanEqualsToken(self) -> GreaterThanEqualsToken {
        for (greaterThanEqualsToken in GreaterThanEqualsToken(__all_data__)) {
            if (greaterThanEqualsToken.key_eq(self)) {
                return greaterThanEqualsToken
            }
        }
    }
    
    /**
     * trans to InstanceOfKeyword
     */
    pub fn toInstanceOfKeyword(self) -> InstanceOfKeyword {
        for (instanceOfKeyword in InstanceOfKeyword(__all_data__)) {
            if (instanceOfKeyword.key_eq(self)) {
                return instanceOfKeyword
            }
        }
    }
    
    /**
     * trans to InKeyword
     */
    pub fn toInKeyword(self) -> InKeyword {
        for (inKeyword in InKeyword(__all_data__)) {
            if (inKeyword.key_eq(self)) {
                return inKeyword
            }
        }
    }
    
    /**
     * trans to EqualsEqualsToken
     */
    pub fn toEqualsEqualsToken(self) -> EqualsEqualsToken {
        for (equalsEqualsToken in EqualsEqualsToken(__all_data__)) {
            if (equalsEqualsToken.key_eq(self)) {
                return equalsEqualsToken
            }
        }
    }
    
    /**
     * trans to EqualsEqualsEqualsToken
     */
    pub fn toEqualsEqualsEqualsToken(self) -> EqualsEqualsEqualsToken {
        for (equalsEqualsEqualsToken in EqualsEqualsEqualsToken(__all_data__)) {
            if (equalsEqualsEqualsToken.key_eq(self)) {
                return equalsEqualsEqualsToken
            }
        }
    }
    
    /**
     * trans to ExclamationEqualsEqualsToken
     */
    pub fn toExclamationEqualsEqualsToken(self) -> ExclamationEqualsEqualsToken {
        for (exclamationEqualsEqualsToken in ExclamationEqualsEqualsToken(__all_data__)) {
            if (exclamationEqualsEqualsToken.key_eq(self)) {
                return exclamationEqualsEqualsToken
            }
        }
    }
    
    /**
     * trans to ExclamationEqualsToken
     */
    pub fn toExclamationEqualsToken(self) -> ExclamationEqualsToken {
        for (exclamationEqualsToken in ExclamationEqualsToken(__all_data__)) {
            if (exclamationEqualsToken.key_eq(self)) {
                return exclamationEqualsToken
            }
        }
    }
    
    /**
     * trans to AmpersandToken
     */
    pub fn toAmpersandToken(self) -> AmpersandToken {
        for (ampersandToken in AmpersandToken(__all_data__)) {
            if (ampersandToken.key_eq(self)) {
                return ampersandToken
            }
        }
    }
    
    /**
     * trans to BarToken
     */
    pub fn toBarToken(self) -> BarToken {
        for (barToken in BarToken(__all_data__)) {
            if (barToken.key_eq(self)) {
                return barToken
            }
        }
    }
    
    /**
     * trans to CaretToken
     */
    pub fn toCaretToken(self) -> CaretToken {
        for (caretToken in CaretToken(__all_data__)) {
            if (caretToken.key_eq(self)) {
                return caretToken
            }
        }
    }
    
}

/**
 * This type consists of the following types: [AmpersandAmpersandToken, BarBarToken]
 */
schema LogicalOperator extends AstNode {
}

impl LogicalOperator {
    @data_constraint
    @inline
    pub fn __all__(db: ArkTsDB) -> *LogicalOperator {
        for (ampersandAmpersandToken in AmpersandAmpersandToken(db)) {
            yield LogicalOperator {
                id : ampersandAmpersandToken.id,
                kind : ampersandAmpersandToken.kind,
                parent_id : ampersandAmpersandToken.parent_id,
                parent_kind : ampersandAmpersandToken.parent_kind,
                index : ampersandAmpersandToken.index,
                location_id : ampersandAmpersandToken.location_id,
            }
        }
        for (barBarToken in BarBarToken(db)) {
            yield LogicalOperator {
                id : barBarToken.id,
                kind : barBarToken.kind,
                parent_id : barBarToken.parent_id,
                parent_kind : barBarToken.parent_kind,
                index : barBarToken.index,
                location_id : barBarToken.location_id,
            }
        }
    }

    /**
     * Get primary key.
     */
    pub fn getPrimaryKey(self) -> int {
        return self.id
    }
    
    /**
     * trans to AmpersandAmpersandToken
     */
    pub fn toAmpersandAmpersandToken(self) -> AmpersandAmpersandToken {
        for (ampersandAmpersandToken in AmpersandAmpersandToken(__all_data__)) {
            if (ampersandAmpersandToken.key_eq(self)) {
                return ampersandAmpersandToken
            }
        }
    }
    
    /**
     * trans to BarBarToken
     */
    pub fn toBarBarToken(self) -> BarBarToken {
        for (barBarToken in BarBarToken(__all_data__)) {
            if (barBarToken.key_eq(self)) {
                return barBarToken
            }
        }
    }
    
}

/**
 * This type consists of the following types: [AsteriskAsteriskToken, AsteriskToken, SlashToken, PercentToken, PlusToken, MinusToken, LessThanLessThanToken, GreaterThanGreaterThanToken, GreaterThanGreaterThanGreaterThanToken, LessThanToken, LessThanEqualsToken, GreaterThanToken, GreaterThanEqualsToken, InstanceOfKeyword, InKeyword, EqualsEqualsToken, EqualsEqualsEqualsToken, ExclamationEqualsEqualsToken, ExclamationEqualsToken, AmpersandToken, BarToken, CaretToken, AmpersandAmpersandToken, BarBarToken]
 */
schema LogicalOperatorOrHigher extends AstNode {
}

impl LogicalOperatorOrHigher {
    @data_constraint
    @inline
    pub fn __all__(db: ArkTsDB) -> *LogicalOperatorOrHigher {
        for (asteriskAsteriskToken in AsteriskAsteriskToken(db)) {
            yield LogicalOperatorOrHigher {
                id : asteriskAsteriskToken.id,
                kind : asteriskAsteriskToken.kind,
                parent_id : asteriskAsteriskToken.parent_id,
                parent_kind : asteriskAsteriskToken.parent_kind,
                index : asteriskAsteriskToken.index,
                location_id : asteriskAsteriskToken.location_id,
            }
        }
        for (asteriskToken in AsteriskToken(db)) {
            yield LogicalOperatorOrHigher {
                id : asteriskToken.id,
                kind : asteriskToken.kind,
                parent_id : asteriskToken.parent_id,
                parent_kind : asteriskToken.parent_kind,
                index : asteriskToken.index,
                location_id : asteriskToken.location_id,
            }
        }
        for (slashToken in SlashToken(db)) {
            yield LogicalOperatorOrHigher {
                id : slashToken.id,
                kind : slashToken.kind,
                parent_id : slashToken.parent_id,
                parent_kind : slashToken.parent_kind,
                index : slashToken.index,
                location_id : slashToken.location_id,
            }
        }
        for (percentToken in PercentToken(db)) {
            yield LogicalOperatorOrHigher {
                id : percentToken.id,
                kind : percentToken.kind,
                parent_id : percentToken.parent_id,
                parent_kind : percentToken.parent_kind,
                index : percentToken.index,
                location_id : percentToken.location_id,
            }
        }
        for (plusToken in PlusToken(db)) {
            yield LogicalOperatorOrHigher {
                id : plusToken.id,
                kind : plusToken.kind,
                parent_id : plusToken.parent_id,
                parent_kind : plusToken.parent_kind,
                index : plusToken.index,
                location_id : plusToken.location_id,
            }
        }
        for (minusToken in MinusToken(db)) {
            yield LogicalOperatorOrHigher {
                id : minusToken.id,
                kind : minusToken.kind,
                parent_id : minusToken.parent_id,
                parent_kind : minusToken.parent_kind,
                index : minusToken.index,
                location_id : minusToken.location_id,
            }
        }
        for (lessThanLessThanToken in LessThanLessThanToken(db)) {
            yield LogicalOperatorOrHigher {
                id : lessThanLessThanToken.id,
                kind : lessThanLessThanToken.kind,
                parent_id : lessThanLessThanToken.parent_id,
                parent_kind : lessThanLessThanToken.parent_kind,
                index : lessThanLessThanToken.index,
                location_id : lessThanLessThanToken.location_id,
            }
        }
        for (greaterThanGreaterThanToken in GreaterThanGreaterThanToken(db)) {
            yield LogicalOperatorOrHigher {
                id : greaterThanGreaterThanToken.id,
                kind : greaterThanGreaterThanToken.kind,
                parent_id : greaterThanGreaterThanToken.parent_id,
                parent_kind : greaterThanGreaterThanToken.parent_kind,
                index : greaterThanGreaterThanToken.index,
                location_id : greaterThanGreaterThanToken.location_id,
            }
        }
        for (greaterThanGreaterThanGreaterThanToken in GreaterThanGreaterThanGreaterThanToken(db)) {
            yield LogicalOperatorOrHigher {
                id : greaterThanGreaterThanGreaterThanToken.id,
                kind : greaterThanGreaterThanGreaterThanToken.kind,
                parent_id : greaterThanGreaterThanGreaterThanToken.parent_id,
                parent_kind : greaterThanGreaterThanGreaterThanToken.parent_kind,
                index : greaterThanGreaterThanGreaterThanToken.index,
                location_id : greaterThanGreaterThanGreaterThanToken.location_id,
            }
        }
        for (lessThanToken in LessThanToken(db)) {
            yield LogicalOperatorOrHigher {
                id : lessThanToken.id,
                kind : lessThanToken.kind,
                parent_id : lessThanToken.parent_id,
                parent_kind : lessThanToken.parent_kind,
                index : lessThanToken.index,
                location_id : lessThanToken.location_id,
            }
        }
        for (lessThanEqualsToken in LessThanEqualsToken(db)) {
            yield LogicalOperatorOrHigher {
                id : lessThanEqualsToken.id,
                kind : lessThanEqualsToken.kind,
                parent_id : lessThanEqualsToken.parent_id,
                parent_kind : lessThanEqualsToken.parent_kind,
                index : lessThanEqualsToken.index,
                location_id : lessThanEqualsToken.location_id,
            }
        }
        for (greaterThanToken in GreaterThanToken(db)) {
            yield LogicalOperatorOrHigher {
                id : greaterThanToken.id,
                kind : greaterThanToken.kind,
                parent_id : greaterThanToken.parent_id,
                parent_kind : greaterThanToken.parent_kind,
                index : greaterThanToken.index,
                location_id : greaterThanToken.location_id,
            }
        }
        for (greaterThanEqualsToken in GreaterThanEqualsToken(db)) {
            yield LogicalOperatorOrHigher {
                id : greaterThanEqualsToken.id,
                kind : greaterThanEqualsToken.kind,
                parent_id : greaterThanEqualsToken.parent_id,
                parent_kind : greaterThanEqualsToken.parent_kind,
                index : greaterThanEqualsToken.index,
                location_id : greaterThanEqualsToken.location_id,
            }
        }
        for (instanceOfKeyword in InstanceOfKeyword(db)) {
            yield LogicalOperatorOrHigher {
                id : instanceOfKeyword.id,
                kind : instanceOfKeyword.kind,
                parent_id : instanceOfKeyword.parent_id,
                parent_kind : instanceOfKeyword.parent_kind,
                index : instanceOfKeyword.index,
                location_id : instanceOfKeyword.location_id,
            }
        }
        for (inKeyword in InKeyword(db)) {
            yield LogicalOperatorOrHigher {
                id : inKeyword.id,
                kind : inKeyword.kind,
                parent_id : inKeyword.parent_id,
                parent_kind : inKeyword.parent_kind,
                index : inKeyword.index,
                location_id : inKeyword.location_id,
            }
        }
        for (equalsEqualsToken in EqualsEqualsToken(db)) {
            yield LogicalOperatorOrHigher {
                id : equalsEqualsToken.id,
                kind : equalsEqualsToken.kind,
                parent_id : equalsEqualsToken.parent_id,
                parent_kind : equalsEqualsToken.parent_kind,
                index : equalsEqualsToken.index,
                location_id : equalsEqualsToken.location_id,
            }
        }
        for (equalsEqualsEqualsToken in EqualsEqualsEqualsToken(db)) {
            yield LogicalOperatorOrHigher {
                id : equalsEqualsEqualsToken.id,
                kind : equalsEqualsEqualsToken.kind,
                parent_id : equalsEqualsEqualsToken.parent_id,
                parent_kind : equalsEqualsEqualsToken.parent_kind,
                index : equalsEqualsEqualsToken.index,
                location_id : equalsEqualsEqualsToken.location_id,
            }
        }
        for (exclamationEqualsEqualsToken in ExclamationEqualsEqualsToken(db)) {
            yield LogicalOperatorOrHigher {
                id : exclamationEqualsEqualsToken.id,
                kind : exclamationEqualsEqualsToken.kind,
                parent_id : exclamationEqualsEqualsToken.parent_id,
                parent_kind : exclamationEqualsEqualsToken.parent_kind,
                index : exclamationEqualsEqualsToken.index,
                location_id : exclamationEqualsEqualsToken.location_id,
            }
        }
        for (exclamationEqualsToken in ExclamationEqualsToken(db)) {
            yield LogicalOperatorOrHigher {
                id : exclamationEqualsToken.id,
                kind : exclamationEqualsToken.kind,
                parent_id : exclamationEqualsToken.parent_id,
                parent_kind : exclamationEqualsToken.parent_kind,
                index : exclamationEqualsToken.index,
                location_id : exclamationEqualsToken.location_id,
            }
        }
        for (ampersandToken in AmpersandToken(db)) {
            yield LogicalOperatorOrHigher {
                id : ampersandToken.id,
                kind : ampersandToken.kind,
                parent_id : ampersandToken.parent_id,
                parent_kind : ampersandToken.parent_kind,
                index : ampersandToken.index,
                location_id : ampersandToken.location_id,
            }
        }
        for (barToken in BarToken(db)) {
            yield LogicalOperatorOrHigher {
                id : barToken.id,
                kind : barToken.kind,
                parent_id : barToken.parent_id,
                parent_kind : barToken.parent_kind,
                index : barToken.index,
                location_id : barToken.location_id,
            }
        }
        for (caretToken in CaretToken(db)) {
            yield LogicalOperatorOrHigher {
                id : caretToken.id,
                kind : caretToken.kind,
                parent_id : caretToken.parent_id,
                parent_kind : caretToken.parent_kind,
                index : caretToken.index,
                location_id : caretToken.location_id,
            }
        }
        for (ampersandAmpersandToken in AmpersandAmpersandToken(db)) {
            yield LogicalOperatorOrHigher {
                id : ampersandAmpersandToken.id,
                kind : ampersandAmpersandToken.kind,
                parent_id : ampersandAmpersandToken.parent_id,
                parent_kind : ampersandAmpersandToken.parent_kind,
                index : ampersandAmpersandToken.index,
                location_id : ampersandAmpersandToken.location_id,
            }
        }
        for (barBarToken in BarBarToken(db)) {
            yield LogicalOperatorOrHigher {
                id : barBarToken.id,
                kind : barBarToken.kind,
                parent_id : barBarToken.parent_id,
                parent_kind : barBarToken.parent_kind,
                index : barBarToken.index,
                location_id : barBarToken.location_id,
            }
        }
    }

    /**
     * Get primary key.
     */
    pub fn getPrimaryKey(self) -> int {
        return self.id
    }
    
    /**
     * trans to AsteriskAsteriskToken
     */
    pub fn toAsteriskAsteriskToken(self) -> AsteriskAsteriskToken {
        for (asteriskAsteriskToken in AsteriskAsteriskToken(__all_data__)) {
            if (asteriskAsteriskToken.key_eq(self)) {
                return asteriskAsteriskToken
            }
        }
    }
    
    /**
     * trans to AsteriskToken
     */
    pub fn toAsteriskToken(self) -> AsteriskToken {
        for (asteriskToken in AsteriskToken(__all_data__)) {
            if (asteriskToken.key_eq(self)) {
                return asteriskToken
            }
        }
    }
    
    /**
     * trans to SlashToken
     */
    pub fn toSlashToken(self) -> SlashToken {
        for (slashToken in SlashToken(__all_data__)) {
            if (slashToken.key_eq(self)) {
                return slashToken
            }
        }
    }
    
    /**
     * trans to PercentToken
     */
    pub fn toPercentToken(self) -> PercentToken {
        for (percentToken in PercentToken(__all_data__)) {
            if (percentToken.key_eq(self)) {
                return percentToken
            }
        }
    }
    
    /**
     * trans to PlusToken
     */
    pub fn toPlusToken(self) -> PlusToken {
        for (plusToken in PlusToken(__all_data__)) {
            if (plusToken.key_eq(self)) {
                return plusToken
            }
        }
    }
    
    /**
     * trans to MinusToken
     */
    pub fn toMinusToken(self) -> MinusToken {
        for (minusToken in MinusToken(__all_data__)) {
            if (minusToken.key_eq(self)) {
                return minusToken
            }
        }
    }
    
    /**
     * trans to LessThanLessThanToken
     */
    pub fn toLessThanLessThanToken(self) -> LessThanLessThanToken {
        for (lessThanLessThanToken in LessThanLessThanToken(__all_data__)) {
            if (lessThanLessThanToken.key_eq(self)) {
                return lessThanLessThanToken
            }
        }
    }
    
    /**
     * trans to GreaterThanGreaterThanToken
     */
    pub fn toGreaterThanGreaterThanToken(self) -> GreaterThanGreaterThanToken {
        for (greaterThanGreaterThanToken in GreaterThanGreaterThanToken(__all_data__)) {
            if (greaterThanGreaterThanToken.key_eq(self)) {
                return greaterThanGreaterThanToken
            }
        }
    }
    
    /**
     * trans to GreaterThanGreaterThanGreaterThanToken
     */
    pub fn toGreaterThanGreaterThanGreaterThanToken(self) -> GreaterThanGreaterThanGreaterThanToken {
        for (greaterThanGreaterThanGreaterThanToken in GreaterThanGreaterThanGreaterThanToken(__all_data__)) {
            if (greaterThanGreaterThanGreaterThanToken.key_eq(self)) {
                return greaterThanGreaterThanGreaterThanToken
            }
        }
    }
    
    /**
     * trans to LessThanToken
     */
    pub fn toLessThanToken(self) -> LessThanToken {
        for (lessThanToken in LessThanToken(__all_data__)) {
            if (lessThanToken.key_eq(self)) {
                return lessThanToken
            }
        }
    }
    
    /**
     * trans to LessThanEqualsToken
     */
    pub fn toLessThanEqualsToken(self) -> LessThanEqualsToken {
        for (lessThanEqualsToken in LessThanEqualsToken(__all_data__)) {
            if (lessThanEqualsToken.key_eq(self)) {
                return lessThanEqualsToken
            }
        }
    }
    
    /**
     * trans to GreaterThanToken
     */
    pub fn toGreaterThanToken(self) -> GreaterThanToken {
        for (greaterThanToken in GreaterThanToken(__all_data__)) {
            if (greaterThanToken.key_eq(self)) {
                return greaterThanToken
            }
        }
    }
    
    /**
     * trans to GreaterThanEqualsToken
     */
    pub fn toGreaterThanEqualsToken(self) -> GreaterThanEqualsToken {
        for (greaterThanEqualsToken in GreaterThanEqualsToken(__all_data__)) {
            if (greaterThanEqualsToken.key_eq(self)) {
                return greaterThanEqualsToken
            }
        }
    }
    
    /**
     * trans to InstanceOfKeyword
     */
    pub fn toInstanceOfKeyword(self) -> InstanceOfKeyword {
        for (instanceOfKeyword in InstanceOfKeyword(__all_data__)) {
            if (instanceOfKeyword.key_eq(self)) {
                return instanceOfKeyword
            }
        }
    }
    
    /**
     * trans to InKeyword
     */
    pub fn toInKeyword(self) -> InKeyword {
        for (inKeyword in InKeyword(__all_data__)) {
            if (inKeyword.key_eq(self)) {
                return inKeyword
            }
        }
    }
    
    /**
     * trans to EqualsEqualsToken
     */
    pub fn toEqualsEqualsToken(self) -> EqualsEqualsToken {
        for (equalsEqualsToken in EqualsEqualsToken(__all_data__)) {
            if (equalsEqualsToken.key_eq(self)) {
                return equalsEqualsToken
            }
        }
    }
    
    /**
     * trans to EqualsEqualsEqualsToken
     */
    pub fn toEqualsEqualsEqualsToken(self) -> EqualsEqualsEqualsToken {
        for (equalsEqualsEqualsToken in EqualsEqualsEqualsToken(__all_data__)) {
            if (equalsEqualsEqualsToken.key_eq(self)) {
                return equalsEqualsEqualsToken
            }
        }
    }
    
    /**
     * trans to ExclamationEqualsEqualsToken
     */
    pub fn toExclamationEqualsEqualsToken(self) -> ExclamationEqualsEqualsToken {
        for (exclamationEqualsEqualsToken in ExclamationEqualsEqualsToken(__all_data__)) {
            if (exclamationEqualsEqualsToken.key_eq(self)) {
                return exclamationEqualsEqualsToken
            }
        }
    }
    
    /**
     * trans to ExclamationEqualsToken
     */
    pub fn toExclamationEqualsToken(self) -> ExclamationEqualsToken {
        for (exclamationEqualsToken in ExclamationEqualsToken(__all_data__)) {
            if (exclamationEqualsToken.key_eq(self)) {
                return exclamationEqualsToken
            }
        }
    }
    
    /**
     * trans to AmpersandToken
     */
    pub fn toAmpersandToken(self) -> AmpersandToken {
        for (ampersandToken in AmpersandToken(__all_data__)) {
            if (ampersandToken.key_eq(self)) {
                return ampersandToken
            }
        }
    }
    
    /**
     * trans to BarToken
     */
    pub fn toBarToken(self) -> BarToken {
        for (barToken in BarToken(__all_data__)) {
            if (barToken.key_eq(self)) {
                return barToken
            }
        }
    }
    
    /**
     * trans to CaretToken
     */
    pub fn toCaretToken(self) -> CaretToken {
        for (caretToken in CaretToken(__all_data__)) {
            if (caretToken.key_eq(self)) {
                return caretToken
            }
        }
    }
    
    /**
     * trans to AmpersandAmpersandToken
     */
    pub fn toAmpersandAmpersandToken(self) -> AmpersandAmpersandToken {
        for (ampersandAmpersandToken in AmpersandAmpersandToken(__all_data__)) {
            if (ampersandAmpersandToken.key_eq(self)) {
                return ampersandAmpersandToken
            }
        }
    }
    
    /**
     * trans to BarBarToken
     */
    pub fn toBarBarToken(self) -> BarBarToken {
        for (barBarToken in BarBarToken(__all_data__)) {
            if (barBarToken.key_eq(self)) {
                return barBarToken
            }
        }
    }
    
}

/**
 * This type consists of the following types: [PlusEqualsToken, MinusEqualsToken, AsteriskEqualsToken, AsteriskAsteriskEqualsToken, SlashEqualsToken, PercentEqualsToken, AmpersandEqualsToken, BarEqualsToken, CaretEqualsToken, LessThanLessThanEqualsToken, GreaterThanGreaterThanGreaterThanEqualsToken, GreaterThanGreaterThanEqualsToken, BarBarEqualsToken, AmpersandAmpersandEqualsToken, QuestionQuestionEqualsToken]
 */
schema CompoundAssignmentOperator extends AstNode {
}

impl CompoundAssignmentOperator {
    @data_constraint
    @inline
    pub fn __all__(db: ArkTsDB) -> *CompoundAssignmentOperator {
        for (plusEqualsToken in PlusEqualsToken(db)) {
            yield CompoundAssignmentOperator {
                id : plusEqualsToken.id,
                kind : plusEqualsToken.kind,
                parent_id : plusEqualsToken.parent_id,
                parent_kind : plusEqualsToken.parent_kind,
                index : plusEqualsToken.index,
                location_id : plusEqualsToken.location_id,
            }
        }
        for (minusEqualsToken in MinusEqualsToken(db)) {
            yield CompoundAssignmentOperator {
                id : minusEqualsToken.id,
                kind : minusEqualsToken.kind,
                parent_id : minusEqualsToken.parent_id,
                parent_kind : minusEqualsToken.parent_kind,
                index : minusEqualsToken.index,
                location_id : minusEqualsToken.location_id,
            }
        }
        for (asteriskEqualsToken in AsteriskEqualsToken(db)) {
            yield CompoundAssignmentOperator {
                id : asteriskEqualsToken.id,
                kind : asteriskEqualsToken.kind,
                parent_id : asteriskEqualsToken.parent_id,
                parent_kind : asteriskEqualsToken.parent_kind,
                index : asteriskEqualsToken.index,
                location_id : asteriskEqualsToken.location_id,
            }
        }
        for (asteriskAsteriskEqualsToken in AsteriskAsteriskEqualsToken(db)) {
            yield CompoundAssignmentOperator {
                id : asteriskAsteriskEqualsToken.id,
                kind : asteriskAsteriskEqualsToken.kind,
                parent_id : asteriskAsteriskEqualsToken.parent_id,
                parent_kind : asteriskAsteriskEqualsToken.parent_kind,
                index : asteriskAsteriskEqualsToken.index,
                location_id : asteriskAsteriskEqualsToken.location_id,
            }
        }
        for (slashEqualsToken in SlashEqualsToken(db)) {
            yield CompoundAssignmentOperator {
                id : slashEqualsToken.id,
                kind : slashEqualsToken.kind,
                parent_id : slashEqualsToken.parent_id,
                parent_kind : slashEqualsToken.parent_kind,
                index : slashEqualsToken.index,
                location_id : slashEqualsToken.location_id,
            }
        }
        for (percentEqualsToken in PercentEqualsToken(db)) {
            yield CompoundAssignmentOperator {
                id : percentEqualsToken.id,
                kind : percentEqualsToken.kind,
                parent_id : percentEqualsToken.parent_id,
                parent_kind : percentEqualsToken.parent_kind,
                index : percentEqualsToken.index,
                location_id : percentEqualsToken.location_id,
            }
        }
        for (ampersandEqualsToken in AmpersandEqualsToken(db)) {
            yield CompoundAssignmentOperator {
                id : ampersandEqualsToken.id,
                kind : ampersandEqualsToken.kind,
                parent_id : ampersandEqualsToken.parent_id,
                parent_kind : ampersandEqualsToken.parent_kind,
                index : ampersandEqualsToken.index,
                location_id : ampersandEqualsToken.location_id,
            }
        }
        for (barEqualsToken in BarEqualsToken(db)) {
            yield CompoundAssignmentOperator {
                id : barEqualsToken.id,
                kind : barEqualsToken.kind,
                parent_id : barEqualsToken.parent_id,
                parent_kind : barEqualsToken.parent_kind,
                index : barEqualsToken.index,
                location_id : barEqualsToken.location_id,
            }
        }
        for (caretEqualsToken in CaretEqualsToken(db)) {
            yield CompoundAssignmentOperator {
                id : caretEqualsToken.id,
                kind : caretEqualsToken.kind,
                parent_id : caretEqualsToken.parent_id,
                parent_kind : caretEqualsToken.parent_kind,
                index : caretEqualsToken.index,
                location_id : caretEqualsToken.location_id,
            }
        }
        for (lessThanLessThanEqualsToken in LessThanLessThanEqualsToken(db)) {
            yield CompoundAssignmentOperator {
                id : lessThanLessThanEqualsToken.id,
                kind : lessThanLessThanEqualsToken.kind,
                parent_id : lessThanLessThanEqualsToken.parent_id,
                parent_kind : lessThanLessThanEqualsToken.parent_kind,
                index : lessThanLessThanEqualsToken.index,
                location_id : lessThanLessThanEqualsToken.location_id,
            }
        }
        for (greaterThanGreaterThanGreaterThanEqualsToken in GreaterThanGreaterThanGreaterThanEqualsToken(db)) {
            yield CompoundAssignmentOperator {
                id : greaterThanGreaterThanGreaterThanEqualsToken.id,
                kind : greaterThanGreaterThanGreaterThanEqualsToken.kind,
                parent_id : greaterThanGreaterThanGreaterThanEqualsToken.parent_id,
                parent_kind : greaterThanGreaterThanGreaterThanEqualsToken.parent_kind,
                index : greaterThanGreaterThanGreaterThanEqualsToken.index,
                location_id : greaterThanGreaterThanGreaterThanEqualsToken.location_id,
            }
        }
        for (greaterThanGreaterThanEqualsToken in GreaterThanGreaterThanEqualsToken(db)) {
            yield CompoundAssignmentOperator {
                id : greaterThanGreaterThanEqualsToken.id,
                kind : greaterThanGreaterThanEqualsToken.kind,
                parent_id : greaterThanGreaterThanEqualsToken.parent_id,
                parent_kind : greaterThanGreaterThanEqualsToken.parent_kind,
                index : greaterThanGreaterThanEqualsToken.index,
                location_id : greaterThanGreaterThanEqualsToken.location_id,
            }
        }
        for (barBarEqualsToken in BarBarEqualsToken(db)) {
            yield CompoundAssignmentOperator {
                id : barBarEqualsToken.id,
                kind : barBarEqualsToken.kind,
                parent_id : barBarEqualsToken.parent_id,
                parent_kind : barBarEqualsToken.parent_kind,
                index : barBarEqualsToken.index,
                location_id : barBarEqualsToken.location_id,
            }
        }
        for (ampersandAmpersandEqualsToken in AmpersandAmpersandEqualsToken(db)) {
            yield CompoundAssignmentOperator {
                id : ampersandAmpersandEqualsToken.id,
                kind : ampersandAmpersandEqualsToken.kind,
                parent_id : ampersandAmpersandEqualsToken.parent_id,
                parent_kind : ampersandAmpersandEqualsToken.parent_kind,
                index : ampersandAmpersandEqualsToken.index,
                location_id : ampersandAmpersandEqualsToken.location_id,
            }
        }
        for (questionQuestionEqualsToken in QuestionQuestionEqualsToken(db)) {
            yield CompoundAssignmentOperator {
                id : questionQuestionEqualsToken.id,
                kind : questionQuestionEqualsToken.kind,
                parent_id : questionQuestionEqualsToken.parent_id,
                parent_kind : questionQuestionEqualsToken.parent_kind,
                index : questionQuestionEqualsToken.index,
                location_id : questionQuestionEqualsToken.location_id,
            }
        }
    }

    /**
     * Get primary key.
     */
    pub fn getPrimaryKey(self) -> int {
        return self.id
    }
    
    /**
     * trans to PlusEqualsToken
     */
    pub fn toPlusEqualsToken(self) -> PlusEqualsToken {
        for (plusEqualsToken in PlusEqualsToken(__all_data__)) {
            if (plusEqualsToken.key_eq(self)) {
                return plusEqualsToken
            }
        }
    }
    
    /**
     * trans to MinusEqualsToken
     */
    pub fn toMinusEqualsToken(self) -> MinusEqualsToken {
        for (minusEqualsToken in MinusEqualsToken(__all_data__)) {
            if (minusEqualsToken.key_eq(self)) {
                return minusEqualsToken
            }
        }
    }
    
    /**
     * trans to AsteriskEqualsToken
     */
    pub fn toAsteriskEqualsToken(self) -> AsteriskEqualsToken {
        for (asteriskEqualsToken in AsteriskEqualsToken(__all_data__)) {
            if (asteriskEqualsToken.key_eq(self)) {
                return asteriskEqualsToken
            }
        }
    }
    
    /**
     * trans to AsteriskAsteriskEqualsToken
     */
    pub fn toAsteriskAsteriskEqualsToken(self) -> AsteriskAsteriskEqualsToken {
        for (asteriskAsteriskEqualsToken in AsteriskAsteriskEqualsToken(__all_data__)) {
            if (asteriskAsteriskEqualsToken.key_eq(self)) {
                return asteriskAsteriskEqualsToken
            }
        }
    }
    
    /**
     * trans to SlashEqualsToken
     */
    pub fn toSlashEqualsToken(self) -> SlashEqualsToken {
        for (slashEqualsToken in SlashEqualsToken(__all_data__)) {
            if (slashEqualsToken.key_eq(self)) {
                return slashEqualsToken
            }
        }
    }
    
    /**
     * trans to PercentEqualsToken
     */
    pub fn toPercentEqualsToken(self) -> PercentEqualsToken {
        for (percentEqualsToken in PercentEqualsToken(__all_data__)) {
            if (percentEqualsToken.key_eq(self)) {
                return percentEqualsToken
            }
        }
    }
    
    /**
     * trans to AmpersandEqualsToken
     */
    pub fn toAmpersandEqualsToken(self) -> AmpersandEqualsToken {
        for (ampersandEqualsToken in AmpersandEqualsToken(__all_data__)) {
            if (ampersandEqualsToken.key_eq(self)) {
                return ampersandEqualsToken
            }
        }
    }
    
    /**
     * trans to BarEqualsToken
     */
    pub fn toBarEqualsToken(self) -> BarEqualsToken {
        for (barEqualsToken in BarEqualsToken(__all_data__)) {
            if (barEqualsToken.key_eq(self)) {
                return barEqualsToken
            }
        }
    }
    
    /**
     * trans to CaretEqualsToken
     */
    pub fn toCaretEqualsToken(self) -> CaretEqualsToken {
        for (caretEqualsToken in CaretEqualsToken(__all_data__)) {
            if (caretEqualsToken.key_eq(self)) {
                return caretEqualsToken
            }
        }
    }
    
    /**
     * trans to LessThanLessThanEqualsToken
     */
    pub fn toLessThanLessThanEqualsToken(self) -> LessThanLessThanEqualsToken {
        for (lessThanLessThanEqualsToken in LessThanLessThanEqualsToken(__all_data__)) {
            if (lessThanLessThanEqualsToken.key_eq(self)) {
                return lessThanLessThanEqualsToken
            }
        }
    }
    
    /**
     * trans to GreaterThanGreaterThanGreaterThanEqualsToken
     */
    pub fn toGreaterThanGreaterThanGreaterThanEqualsToken(self) -> GreaterThanGreaterThanGreaterThanEqualsToken {
        for (greaterThanGreaterThanGreaterThanEqualsToken in GreaterThanGreaterThanGreaterThanEqualsToken(__all_data__)) {
            if (greaterThanGreaterThanGreaterThanEqualsToken.key_eq(self)) {
                return greaterThanGreaterThanGreaterThanEqualsToken
            }
        }
    }
    
    /**
     * trans to GreaterThanGreaterThanEqualsToken
     */
    pub fn toGreaterThanGreaterThanEqualsToken(self) -> GreaterThanGreaterThanEqualsToken {
        for (greaterThanGreaterThanEqualsToken in GreaterThanGreaterThanEqualsToken(__all_data__)) {
            if (greaterThanGreaterThanEqualsToken.key_eq(self)) {
                return greaterThanGreaterThanEqualsToken
            }
        }
    }
    
    /**
     * trans to BarBarEqualsToken
     */
    pub fn toBarBarEqualsToken(self) -> BarBarEqualsToken {
        for (barBarEqualsToken in BarBarEqualsToken(__all_data__)) {
            if (barBarEqualsToken.key_eq(self)) {
                return barBarEqualsToken
            }
        }
    }
    
    /**
     * trans to AmpersandAmpersandEqualsToken
     */
    pub fn toAmpersandAmpersandEqualsToken(self) -> AmpersandAmpersandEqualsToken {
        for (ampersandAmpersandEqualsToken in AmpersandAmpersandEqualsToken(__all_data__)) {
            if (ampersandAmpersandEqualsToken.key_eq(self)) {
                return ampersandAmpersandEqualsToken
            }
        }
    }
    
    /**
     * trans to QuestionQuestionEqualsToken
     */
    pub fn toQuestionQuestionEqualsToken(self) -> QuestionQuestionEqualsToken {
        for (questionQuestionEqualsToken in QuestionQuestionEqualsToken(__all_data__)) {
            if (questionQuestionEqualsToken.key_eq(self)) {
                return questionQuestionEqualsToken
            }
        }
    }
    
}

/**
 * This type consists of the following types: [EqualsToken, PlusEqualsToken, MinusEqualsToken, AsteriskEqualsToken, AsteriskAsteriskEqualsToken, SlashEqualsToken, PercentEqualsToken, AmpersandEqualsToken, BarEqualsToken, CaretEqualsToken, LessThanLessThanEqualsToken, GreaterThanGreaterThanGreaterThanEqualsToken, GreaterThanGreaterThanEqualsToken, BarBarEqualsToken, AmpersandAmpersandEqualsToken, QuestionQuestionEqualsToken]
 */
schema AssignmentOperator extends AstNode {
}

impl AssignmentOperator {
    @data_constraint
    @inline
    pub fn __all__(db: ArkTsDB) -> *AssignmentOperator {
        for (equalsToken in EqualsToken(db)) {
            yield AssignmentOperator {
                id : equalsToken.id,
                kind : equalsToken.kind,
                parent_id : equalsToken.parent_id,
                parent_kind : equalsToken.parent_kind,
                index : equalsToken.index,
                location_id : equalsToken.location_id,
            }
        }
        for (plusEqualsToken in PlusEqualsToken(db)) {
            yield AssignmentOperator {
                id : plusEqualsToken.id,
                kind : plusEqualsToken.kind,
                parent_id : plusEqualsToken.parent_id,
                parent_kind : plusEqualsToken.parent_kind,
                index : plusEqualsToken.index,
                location_id : plusEqualsToken.location_id,
            }
        }
        for (minusEqualsToken in MinusEqualsToken(db)) {
            yield AssignmentOperator {
                id : minusEqualsToken.id,
                kind : minusEqualsToken.kind,
                parent_id : minusEqualsToken.parent_id,
                parent_kind : minusEqualsToken.parent_kind,
                index : minusEqualsToken.index,
                location_id : minusEqualsToken.location_id,
            }
        }
        for (asteriskEqualsToken in AsteriskEqualsToken(db)) {
            yield AssignmentOperator {
                id : asteriskEqualsToken.id,
                kind : asteriskEqualsToken.kind,
                parent_id : asteriskEqualsToken.parent_id,
                parent_kind : asteriskEqualsToken.parent_kind,
                index : asteriskEqualsToken.index,
                location_id : asteriskEqualsToken.location_id,
            }
        }
        for (asteriskAsteriskEqualsToken in AsteriskAsteriskEqualsToken(db)) {
            yield AssignmentOperator {
                id : asteriskAsteriskEqualsToken.id,
                kind : asteriskAsteriskEqualsToken.kind,
                parent_id : asteriskAsteriskEqualsToken.parent_id,
                parent_kind : asteriskAsteriskEqualsToken.parent_kind,
                index : asteriskAsteriskEqualsToken.index,
                location_id : asteriskAsteriskEqualsToken.location_id,
            }
        }
        for (slashEqualsToken in SlashEqualsToken(db)) {
            yield AssignmentOperator {
                id : slashEqualsToken.id,
                kind : slashEqualsToken.kind,
                parent_id : slashEqualsToken.parent_id,
                parent_kind : slashEqualsToken.parent_kind,
                index : slashEqualsToken.index,
                location_id : slashEqualsToken.location_id,
            }
        }
        for (percentEqualsToken in PercentEqualsToken(db)) {
            yield AssignmentOperator {
                id : percentEqualsToken.id,
                kind : percentEqualsToken.kind,
                parent_id : percentEqualsToken.parent_id,
                parent_kind : percentEqualsToken.parent_kind,
                index : percentEqualsToken.index,
                location_id : percentEqualsToken.location_id,
            }
        }
        for (ampersandEqualsToken in AmpersandEqualsToken(db)) {
            yield AssignmentOperator {
                id : ampersandEqualsToken.id,
                kind : ampersandEqualsToken.kind,
                parent_id : ampersandEqualsToken.parent_id,
                parent_kind : ampersandEqualsToken.parent_kind,
                index : ampersandEqualsToken.index,
                location_id : ampersandEqualsToken.location_id,
            }
        }
        for (barEqualsToken in BarEqualsToken(db)) {
            yield AssignmentOperator {
                id : barEqualsToken.id,
                kind : barEqualsToken.kind,
                parent_id : barEqualsToken.parent_id,
                parent_kind : barEqualsToken.parent_kind,
                index : barEqualsToken.index,
                location_id : barEqualsToken.location_id,
            }
        }
        for (caretEqualsToken in CaretEqualsToken(db)) {
            yield AssignmentOperator {
                id : caretEqualsToken.id,
                kind : caretEqualsToken.kind,
                parent_id : caretEqualsToken.parent_id,
                parent_kind : caretEqualsToken.parent_kind,
                index : caretEqualsToken.index,
                location_id : caretEqualsToken.location_id,
            }
        }
        for (lessThanLessThanEqualsToken in LessThanLessThanEqualsToken(db)) {
            yield AssignmentOperator {
                id : lessThanLessThanEqualsToken.id,
                kind : lessThanLessThanEqualsToken.kind,
                parent_id : lessThanLessThanEqualsToken.parent_id,
                parent_kind : lessThanLessThanEqualsToken.parent_kind,
                index : lessThanLessThanEqualsToken.index,
                location_id : lessThanLessThanEqualsToken.location_id,
            }
        }
        for (greaterThanGreaterThanGreaterThanEqualsToken in GreaterThanGreaterThanGreaterThanEqualsToken(db)) {
            yield AssignmentOperator {
                id : greaterThanGreaterThanGreaterThanEqualsToken.id,
                kind : greaterThanGreaterThanGreaterThanEqualsToken.kind,
                parent_id : greaterThanGreaterThanGreaterThanEqualsToken.parent_id,
                parent_kind : greaterThanGreaterThanGreaterThanEqualsToken.parent_kind,
                index : greaterThanGreaterThanGreaterThanEqualsToken.index,
                location_id : greaterThanGreaterThanGreaterThanEqualsToken.location_id,
            }
        }
        for (greaterThanGreaterThanEqualsToken in GreaterThanGreaterThanEqualsToken(db)) {
            yield AssignmentOperator {
                id : greaterThanGreaterThanEqualsToken.id,
                kind : greaterThanGreaterThanEqualsToken.kind,
                parent_id : greaterThanGreaterThanEqualsToken.parent_id,
                parent_kind : greaterThanGreaterThanEqualsToken.parent_kind,
                index : greaterThanGreaterThanEqualsToken.index,
                location_id : greaterThanGreaterThanEqualsToken.location_id,
            }
        }
        for (barBarEqualsToken in BarBarEqualsToken(db)) {
            yield AssignmentOperator {
                id : barBarEqualsToken.id,
                kind : barBarEqualsToken.kind,
                parent_id : barBarEqualsToken.parent_id,
                parent_kind : barBarEqualsToken.parent_kind,
                index : barBarEqualsToken.index,
                location_id : barBarEqualsToken.location_id,
            }
        }
        for (ampersandAmpersandEqualsToken in AmpersandAmpersandEqualsToken(db)) {
            yield AssignmentOperator {
                id : ampersandAmpersandEqualsToken.id,
                kind : ampersandAmpersandEqualsToken.kind,
                parent_id : ampersandAmpersandEqualsToken.parent_id,
                parent_kind : ampersandAmpersandEqualsToken.parent_kind,
                index : ampersandAmpersandEqualsToken.index,
                location_id : ampersandAmpersandEqualsToken.location_id,
            }
        }
        for (questionQuestionEqualsToken in QuestionQuestionEqualsToken(db)) {
            yield AssignmentOperator {
                id : questionQuestionEqualsToken.id,
                kind : questionQuestionEqualsToken.kind,
                parent_id : questionQuestionEqualsToken.parent_id,
                parent_kind : questionQuestionEqualsToken.parent_kind,
                index : questionQuestionEqualsToken.index,
                location_id : questionQuestionEqualsToken.location_id,
            }
        }
    }

    /**
     * Get primary key.
     */
    pub fn getPrimaryKey(self) -> int {
        return self.id
    }
    
    /**
     * trans to EqualsToken
     */
    pub fn toEqualsToken(self) -> EqualsToken {
        for (equalsToken in EqualsToken(__all_data__)) {
            if (equalsToken.key_eq(self)) {
                return equalsToken
            }
        }
    }
    
    /**
     * trans to PlusEqualsToken
     */
    pub fn toPlusEqualsToken(self) -> PlusEqualsToken {
        for (plusEqualsToken in PlusEqualsToken(__all_data__)) {
            if (plusEqualsToken.key_eq(self)) {
                return plusEqualsToken
            }
        }
    }
    
    /**
     * trans to MinusEqualsToken
     */
    pub fn toMinusEqualsToken(self) -> MinusEqualsToken {
        for (minusEqualsToken in MinusEqualsToken(__all_data__)) {
            if (minusEqualsToken.key_eq(self)) {
                return minusEqualsToken
            }
        }
    }
    
    /**
     * trans to AsteriskEqualsToken
     */
    pub fn toAsteriskEqualsToken(self) -> AsteriskEqualsToken {
        for (asteriskEqualsToken in AsteriskEqualsToken(__all_data__)) {
            if (asteriskEqualsToken.key_eq(self)) {
                return asteriskEqualsToken
            }
        }
    }
    
    /**
     * trans to AsteriskAsteriskEqualsToken
     */
    pub fn toAsteriskAsteriskEqualsToken(self) -> AsteriskAsteriskEqualsToken {
        for (asteriskAsteriskEqualsToken in AsteriskAsteriskEqualsToken(__all_data__)) {
            if (asteriskAsteriskEqualsToken.key_eq(self)) {
                return asteriskAsteriskEqualsToken
            }
        }
    }
    
    /**
     * trans to SlashEqualsToken
     */
    pub fn toSlashEqualsToken(self) -> SlashEqualsToken {
        for (slashEqualsToken in SlashEqualsToken(__all_data__)) {
            if (slashEqualsToken.key_eq(self)) {
                return slashEqualsToken
            }
        }
    }
    
    /**
     * trans to PercentEqualsToken
     */
    pub fn toPercentEqualsToken(self) -> PercentEqualsToken {
        for (percentEqualsToken in PercentEqualsToken(__all_data__)) {
            if (percentEqualsToken.key_eq(self)) {
                return percentEqualsToken
            }
        }
    }
    
    /**
     * trans to AmpersandEqualsToken
     */
    pub fn toAmpersandEqualsToken(self) -> AmpersandEqualsToken {
        for (ampersandEqualsToken in AmpersandEqualsToken(__all_data__)) {
            if (ampersandEqualsToken.key_eq(self)) {
                return ampersandEqualsToken
            }
        }
    }
    
    /**
     * trans to BarEqualsToken
     */
    pub fn toBarEqualsToken(self) -> BarEqualsToken {
        for (barEqualsToken in BarEqualsToken(__all_data__)) {
            if (barEqualsToken.key_eq(self)) {
                return barEqualsToken
            }
        }
    }
    
    /**
     * trans to CaretEqualsToken
     */
    pub fn toCaretEqualsToken(self) -> CaretEqualsToken {
        for (caretEqualsToken in CaretEqualsToken(__all_data__)) {
            if (caretEqualsToken.key_eq(self)) {
                return caretEqualsToken
            }
        }
    }
    
    /**
     * trans to LessThanLessThanEqualsToken
     */
    pub fn toLessThanLessThanEqualsToken(self) -> LessThanLessThanEqualsToken {
        for (lessThanLessThanEqualsToken in LessThanLessThanEqualsToken(__all_data__)) {
            if (lessThanLessThanEqualsToken.key_eq(self)) {
                return lessThanLessThanEqualsToken
            }
        }
    }
    
    /**
     * trans to GreaterThanGreaterThanGreaterThanEqualsToken
     */
    pub fn toGreaterThanGreaterThanGreaterThanEqualsToken(self) -> GreaterThanGreaterThanGreaterThanEqualsToken {
        for (greaterThanGreaterThanGreaterThanEqualsToken in GreaterThanGreaterThanGreaterThanEqualsToken(__all_data__)) {
            if (greaterThanGreaterThanGreaterThanEqualsToken.key_eq(self)) {
                return greaterThanGreaterThanGreaterThanEqualsToken
            }
        }
    }
    
    /**
     * trans to GreaterThanGreaterThanEqualsToken
     */
    pub fn toGreaterThanGreaterThanEqualsToken(self) -> GreaterThanGreaterThanEqualsToken {
        for (greaterThanGreaterThanEqualsToken in GreaterThanGreaterThanEqualsToken(__all_data__)) {
            if (greaterThanGreaterThanEqualsToken.key_eq(self)) {
                return greaterThanGreaterThanEqualsToken
            }
        }
    }
    
    /**
     * trans to BarBarEqualsToken
     */
    pub fn toBarBarEqualsToken(self) -> BarBarEqualsToken {
        for (barBarEqualsToken in BarBarEqualsToken(__all_data__)) {
            if (barBarEqualsToken.key_eq(self)) {
                return barBarEqualsToken
            }
        }
    }
    
    /**
     * trans to AmpersandAmpersandEqualsToken
     */
    pub fn toAmpersandAmpersandEqualsToken(self) -> AmpersandAmpersandEqualsToken {
        for (ampersandAmpersandEqualsToken in AmpersandAmpersandEqualsToken(__all_data__)) {
            if (ampersandAmpersandEqualsToken.key_eq(self)) {
                return ampersandAmpersandEqualsToken
            }
        }
    }
    
    /**
     * trans to QuestionQuestionEqualsToken
     */
    pub fn toQuestionQuestionEqualsToken(self) -> QuestionQuestionEqualsToken {
        for (questionQuestionEqualsToken in QuestionQuestionEqualsToken(__all_data__)) {
            if (questionQuestionEqualsToken.key_eq(self)) {
                return questionQuestionEqualsToken
            }
        }
    }
    
}

/**
 * This type consists of the following types: [QuestionQuestionToken, AsteriskAsteriskToken, AsteriskToken, SlashToken, PercentToken, PlusToken, MinusToken, LessThanLessThanToken, GreaterThanGreaterThanToken, GreaterThanGreaterThanGreaterThanToken, LessThanToken, LessThanEqualsToken, GreaterThanToken, GreaterThanEqualsToken, InstanceOfKeyword, InKeyword, EqualsEqualsToken, EqualsEqualsEqualsToken, ExclamationEqualsEqualsToken, ExclamationEqualsToken, AmpersandToken, BarToken, CaretToken, AmpersandAmpersandToken, BarBarToken, EqualsToken, PlusEqualsToken, MinusEqualsToken, AsteriskEqualsToken, AsteriskAsteriskEqualsToken, SlashEqualsToken, PercentEqualsToken, AmpersandEqualsToken, BarEqualsToken, CaretEqualsToken, LessThanLessThanEqualsToken, GreaterThanGreaterThanGreaterThanEqualsToken, GreaterThanGreaterThanEqualsToken, BarBarEqualsToken, AmpersandAmpersandEqualsToken, QuestionQuestionEqualsToken]
 */
schema AssignmentOperatorOrHigher extends AstNode {
}

impl AssignmentOperatorOrHigher {
    @data_constraint
    @inline
    pub fn __all__(db: ArkTsDB) -> *AssignmentOperatorOrHigher {
        for (questionQuestionToken in QuestionQuestionToken(db)) {
            yield AssignmentOperatorOrHigher {
                id : questionQuestionToken.id,
                kind : questionQuestionToken.kind,
                parent_id : questionQuestionToken.parent_id,
                parent_kind : questionQuestionToken.parent_kind,
                index : questionQuestionToken.index,
                location_id : questionQuestionToken.location_id,
            }
        }
        for (asteriskAsteriskToken in AsteriskAsteriskToken(db)) {
            yield AssignmentOperatorOrHigher {
                id : asteriskAsteriskToken.id,
                kind : asteriskAsteriskToken.kind,
                parent_id : asteriskAsteriskToken.parent_id,
                parent_kind : asteriskAsteriskToken.parent_kind,
                index : asteriskAsteriskToken.index,
                location_id : asteriskAsteriskToken.location_id,
            }
        }
        for (asteriskToken in AsteriskToken(db)) {
            yield AssignmentOperatorOrHigher {
                id : asteriskToken.id,
                kind : asteriskToken.kind,
                parent_id : asteriskToken.parent_id,
                parent_kind : asteriskToken.parent_kind,
                index : asteriskToken.index,
                location_id : asteriskToken.location_id,
            }
        }
        for (slashToken in SlashToken(db)) {
            yield AssignmentOperatorOrHigher {
                id : slashToken.id,
                kind : slashToken.kind,
                parent_id : slashToken.parent_id,
                parent_kind : slashToken.parent_kind,
                index : slashToken.index,
                location_id : slashToken.location_id,
            }
        }
        for (percentToken in PercentToken(db)) {
            yield AssignmentOperatorOrHigher {
                id : percentToken.id,
                kind : percentToken.kind,
                parent_id : percentToken.parent_id,
                parent_kind : percentToken.parent_kind,
                index : percentToken.index,
                location_id : percentToken.location_id,
            }
        }
        for (plusToken in PlusToken(db)) {
            yield AssignmentOperatorOrHigher {
                id : plusToken.id,
                kind : plusToken.kind,
                parent_id : plusToken.parent_id,
                parent_kind : plusToken.parent_kind,
                index : plusToken.index,
                location_id : plusToken.location_id,
            }
        }
        for (minusToken in MinusToken(db)) {
            yield AssignmentOperatorOrHigher {
                id : minusToken.id,
                kind : minusToken.kind,
                parent_id : minusToken.parent_id,
                parent_kind : minusToken.parent_kind,
                index : minusToken.index,
                location_id : minusToken.location_id,
            }
        }
        for (lessThanLessThanToken in LessThanLessThanToken(db)) {
            yield AssignmentOperatorOrHigher {
                id : lessThanLessThanToken.id,
                kind : lessThanLessThanToken.kind,
                parent_id : lessThanLessThanToken.parent_id,
                parent_kind : lessThanLessThanToken.parent_kind,
                index : lessThanLessThanToken.index,
                location_id : lessThanLessThanToken.location_id,
            }
        }
        for (greaterThanGreaterThanToken in GreaterThanGreaterThanToken(db)) {
            yield AssignmentOperatorOrHigher {
                id : greaterThanGreaterThanToken.id,
                kind : greaterThanGreaterThanToken.kind,
                parent_id : greaterThanGreaterThanToken.parent_id,
                parent_kind : greaterThanGreaterThanToken.parent_kind,
                index : greaterThanGreaterThanToken.index,
                location_id : greaterThanGreaterThanToken.location_id,
            }
        }
        for (greaterThanGreaterThanGreaterThanToken in GreaterThanGreaterThanGreaterThanToken(db)) {
            yield AssignmentOperatorOrHigher {
                id : greaterThanGreaterThanGreaterThanToken.id,
                kind : greaterThanGreaterThanGreaterThanToken.kind,
                parent_id : greaterThanGreaterThanGreaterThanToken.parent_id,
                parent_kind : greaterThanGreaterThanGreaterThanToken.parent_kind,
                index : greaterThanGreaterThanGreaterThanToken.index,
                location_id : greaterThanGreaterThanGreaterThanToken.location_id,
            }
        }
        for (lessThanToken in LessThanToken(db)) {
            yield AssignmentOperatorOrHigher {
                id : lessThanToken.id,
                kind : lessThanToken.kind,
                parent_id : lessThanToken.parent_id,
                parent_kind : lessThanToken.parent_kind,
                index : lessThanToken.index,
                location_id : lessThanToken.location_id,
            }
        }
        for (lessThanEqualsToken in LessThanEqualsToken(db)) {
            yield AssignmentOperatorOrHigher {
                id : lessThanEqualsToken.id,
                kind : lessThanEqualsToken.kind,
                parent_id : lessThanEqualsToken.parent_id,
                parent_kind : lessThanEqualsToken.parent_kind,
                index : lessThanEqualsToken.index,
                location_id : lessThanEqualsToken.location_id,
            }
        }
        for (greaterThanToken in GreaterThanToken(db)) {
            yield AssignmentOperatorOrHigher {
                id : greaterThanToken.id,
                kind : greaterThanToken.kind,
                parent_id : greaterThanToken.parent_id,
                parent_kind : greaterThanToken.parent_kind,
                index : greaterThanToken.index,
                location_id : greaterThanToken.location_id,
            }
        }
        for (greaterThanEqualsToken in GreaterThanEqualsToken(db)) {
            yield AssignmentOperatorOrHigher {
                id : greaterThanEqualsToken.id,
                kind : greaterThanEqualsToken.kind,
                parent_id : greaterThanEqualsToken.parent_id,
                parent_kind : greaterThanEqualsToken.parent_kind,
                index : greaterThanEqualsToken.index,
                location_id : greaterThanEqualsToken.location_id,
            }
        }
        for (instanceOfKeyword in InstanceOfKeyword(db)) {
            yield AssignmentOperatorOrHigher {
                id : instanceOfKeyword.id,
                kind : instanceOfKeyword.kind,
                parent_id : instanceOfKeyword.parent_id,
                parent_kind : instanceOfKeyword.parent_kind,
                index : instanceOfKeyword.index,
                location_id : instanceOfKeyword.location_id,
            }
        }
        for (inKeyword in InKeyword(db)) {
            yield AssignmentOperatorOrHigher {
                id : inKeyword.id,
                kind : inKeyword.kind,
                parent_id : inKeyword.parent_id,
                parent_kind : inKeyword.parent_kind,
                index : inKeyword.index,
                location_id : inKeyword.location_id,
            }
        }
        for (equalsEqualsToken in EqualsEqualsToken(db)) {
            yield AssignmentOperatorOrHigher {
                id : equalsEqualsToken.id,
                kind : equalsEqualsToken.kind,
                parent_id : equalsEqualsToken.parent_id,
                parent_kind : equalsEqualsToken.parent_kind,
                index : equalsEqualsToken.index,
                location_id : equalsEqualsToken.location_id,
            }
        }
        for (equalsEqualsEqualsToken in EqualsEqualsEqualsToken(db)) {
            yield AssignmentOperatorOrHigher {
                id : equalsEqualsEqualsToken.id,
                kind : equalsEqualsEqualsToken.kind,
                parent_id : equalsEqualsEqualsToken.parent_id,
                parent_kind : equalsEqualsEqualsToken.parent_kind,
                index : equalsEqualsEqualsToken.index,
                location_id : equalsEqualsEqualsToken.location_id,
            }
        }
        for (exclamationEqualsEqualsToken in ExclamationEqualsEqualsToken(db)) {
            yield AssignmentOperatorOrHigher {
                id : exclamationEqualsEqualsToken.id,
                kind : exclamationEqualsEqualsToken.kind,
                parent_id : exclamationEqualsEqualsToken.parent_id,
                parent_kind : exclamationEqualsEqualsToken.parent_kind,
                index : exclamationEqualsEqualsToken.index,
                location_id : exclamationEqualsEqualsToken.location_id,
            }
        }
        for (exclamationEqualsToken in ExclamationEqualsToken(db)) {
            yield AssignmentOperatorOrHigher {
                id : exclamationEqualsToken.id,
                kind : exclamationEqualsToken.kind,
                parent_id : exclamationEqualsToken.parent_id,
                parent_kind : exclamationEqualsToken.parent_kind,
                index : exclamationEqualsToken.index,
                location_id : exclamationEqualsToken.location_id,
            }
        }
        for (ampersandToken in AmpersandToken(db)) {
            yield AssignmentOperatorOrHigher {
                id : ampersandToken.id,
                kind : ampersandToken.kind,
                parent_id : ampersandToken.parent_id,
                parent_kind : ampersandToken.parent_kind,
                index : ampersandToken.index,
                location_id : ampersandToken.location_id,
            }
        }
        for (barToken in BarToken(db)) {
            yield AssignmentOperatorOrHigher {
                id : barToken.id,
                kind : barToken.kind,
                parent_id : barToken.parent_id,
                parent_kind : barToken.parent_kind,
                index : barToken.index,
                location_id : barToken.location_id,
            }
        }
        for (caretToken in CaretToken(db)) {
            yield AssignmentOperatorOrHigher {
                id : caretToken.id,
                kind : caretToken.kind,
                parent_id : caretToken.parent_id,
                parent_kind : caretToken.parent_kind,
                index : caretToken.index,
                location_id : caretToken.location_id,
            }
        }
        for (ampersandAmpersandToken in AmpersandAmpersandToken(db)) {
            yield AssignmentOperatorOrHigher {
                id : ampersandAmpersandToken.id,
                kind : ampersandAmpersandToken.kind,
                parent_id : ampersandAmpersandToken.parent_id,
                parent_kind : ampersandAmpersandToken.parent_kind,
                index : ampersandAmpersandToken.index,
                location_id : ampersandAmpersandToken.location_id,
            }
        }
        for (barBarToken in BarBarToken(db)) {
            yield AssignmentOperatorOrHigher {
                id : barBarToken.id,
                kind : barBarToken.kind,
                parent_id : barBarToken.parent_id,
                parent_kind : barBarToken.parent_kind,
                index : barBarToken.index,
                location_id : barBarToken.location_id,
            }
        }
        for (equalsToken in EqualsToken(db)) {
            yield AssignmentOperatorOrHigher {
                id : equalsToken.id,
                kind : equalsToken.kind,
                parent_id : equalsToken.parent_id,
                parent_kind : equalsToken.parent_kind,
                index : equalsToken.index,
                location_id : equalsToken.location_id,
            }
        }
        for (plusEqualsToken in PlusEqualsToken(db)) {
            yield AssignmentOperatorOrHigher {
                id : plusEqualsToken.id,
                kind : plusEqualsToken.kind,
                parent_id : plusEqualsToken.parent_id,
                parent_kind : plusEqualsToken.parent_kind,
                index : plusEqualsToken.index,
                location_id : plusEqualsToken.location_id,
            }
        }
        for (minusEqualsToken in MinusEqualsToken(db)) {
            yield AssignmentOperatorOrHigher {
                id : minusEqualsToken.id,
                kind : minusEqualsToken.kind,
                parent_id : minusEqualsToken.parent_id,
                parent_kind : minusEqualsToken.parent_kind,
                index : minusEqualsToken.index,
                location_id : minusEqualsToken.location_id,
            }
        }
        for (asteriskEqualsToken in AsteriskEqualsToken(db)) {
            yield AssignmentOperatorOrHigher {
                id : asteriskEqualsToken.id,
                kind : asteriskEqualsToken.kind,
                parent_id : asteriskEqualsToken.parent_id,
                parent_kind : asteriskEqualsToken.parent_kind,
                index : asteriskEqualsToken.index,
                location_id : asteriskEqualsToken.location_id,
            }
        }
        for (asteriskAsteriskEqualsToken in AsteriskAsteriskEqualsToken(db)) {
            yield AssignmentOperatorOrHigher {
                id : asteriskAsteriskEqualsToken.id,
                kind : asteriskAsteriskEqualsToken.kind,
                parent_id : asteriskAsteriskEqualsToken.parent_id,
                parent_kind : asteriskAsteriskEqualsToken.parent_kind,
                index : asteriskAsteriskEqualsToken.index,
                location_id : asteriskAsteriskEqualsToken.location_id,
            }
        }
        for (slashEqualsToken in SlashEqualsToken(db)) {
            yield AssignmentOperatorOrHigher {
                id : slashEqualsToken.id,
                kind : slashEqualsToken.kind,
                parent_id : slashEqualsToken.parent_id,
                parent_kind : slashEqualsToken.parent_kind,
                index : slashEqualsToken.index,
                location_id : slashEqualsToken.location_id,
            }
        }
        for (percentEqualsToken in PercentEqualsToken(db)) {
            yield AssignmentOperatorOrHigher {
                id : percentEqualsToken.id,
                kind : percentEqualsToken.kind,
                parent_id : percentEqualsToken.parent_id,
                parent_kind : percentEqualsToken.parent_kind,
                index : percentEqualsToken.index,
                location_id : percentEqualsToken.location_id,
            }
        }
        for (ampersandEqualsToken in AmpersandEqualsToken(db)) {
            yield AssignmentOperatorOrHigher {
                id : ampersandEqualsToken.id,
                kind : ampersandEqualsToken.kind,
                parent_id : ampersandEqualsToken.parent_id,
                parent_kind : ampersandEqualsToken.parent_kind,
                index : ampersandEqualsToken.index,
                location_id : ampersandEqualsToken.location_id,
            }
        }
        for (barEqualsToken in BarEqualsToken(db)) {
            yield AssignmentOperatorOrHigher {
                id : barEqualsToken.id,
                kind : barEqualsToken.kind,
                parent_id : barEqualsToken.parent_id,
                parent_kind : barEqualsToken.parent_kind,
                index : barEqualsToken.index,
                location_id : barEqualsToken.location_id,
            }
        }
        for (caretEqualsToken in CaretEqualsToken(db)) {
            yield AssignmentOperatorOrHigher {
                id : caretEqualsToken.id,
                kind : caretEqualsToken.kind,
                parent_id : caretEqualsToken.parent_id,
                parent_kind : caretEqualsToken.parent_kind,
                index : caretEqualsToken.index,
                location_id : caretEqualsToken.location_id,
            }
        }
        for (lessThanLessThanEqualsToken in LessThanLessThanEqualsToken(db)) {
            yield AssignmentOperatorOrHigher {
                id : lessThanLessThanEqualsToken.id,
                kind : lessThanLessThanEqualsToken.kind,
                parent_id : lessThanLessThanEqualsToken.parent_id,
                parent_kind : lessThanLessThanEqualsToken.parent_kind,
                index : lessThanLessThanEqualsToken.index,
                location_id : lessThanLessThanEqualsToken.location_id,
            }
        }
        for (greaterThanGreaterThanGreaterThanEqualsToken in GreaterThanGreaterThanGreaterThanEqualsToken(db)) {
            yield AssignmentOperatorOrHigher {
                id : greaterThanGreaterThanGreaterThanEqualsToken.id,
                kind : greaterThanGreaterThanGreaterThanEqualsToken.kind,
                parent_id : greaterThanGreaterThanGreaterThanEqualsToken.parent_id,
                parent_kind : greaterThanGreaterThanGreaterThanEqualsToken.parent_kind,
                index : greaterThanGreaterThanGreaterThanEqualsToken.index,
                location_id : greaterThanGreaterThanGreaterThanEqualsToken.location_id,
            }
        }
        for (greaterThanGreaterThanEqualsToken in GreaterThanGreaterThanEqualsToken(db)) {
            yield AssignmentOperatorOrHigher {
                id : greaterThanGreaterThanEqualsToken.id,
                kind : greaterThanGreaterThanEqualsToken.kind,
                parent_id : greaterThanGreaterThanEqualsToken.parent_id,
                parent_kind : greaterThanGreaterThanEqualsToken.parent_kind,
                index : greaterThanGreaterThanEqualsToken.index,
                location_id : greaterThanGreaterThanEqualsToken.location_id,
            }
        }
        for (barBarEqualsToken in BarBarEqualsToken(db)) {
            yield AssignmentOperatorOrHigher {
                id : barBarEqualsToken.id,
                kind : barBarEqualsToken.kind,
                parent_id : barBarEqualsToken.parent_id,
                parent_kind : barBarEqualsToken.parent_kind,
                index : barBarEqualsToken.index,
                location_id : barBarEqualsToken.location_id,
            }
        }
        for (ampersandAmpersandEqualsToken in AmpersandAmpersandEqualsToken(db)) {
            yield AssignmentOperatorOrHigher {
                id : ampersandAmpersandEqualsToken.id,
                kind : ampersandAmpersandEqualsToken.kind,
                parent_id : ampersandAmpersandEqualsToken.parent_id,
                parent_kind : ampersandAmpersandEqualsToken.parent_kind,
                index : ampersandAmpersandEqualsToken.index,
                location_id : ampersandAmpersandEqualsToken.location_id,
            }
        }
        for (questionQuestionEqualsToken in QuestionQuestionEqualsToken(db)) {
            yield AssignmentOperatorOrHigher {
                id : questionQuestionEqualsToken.id,
                kind : questionQuestionEqualsToken.kind,
                parent_id : questionQuestionEqualsToken.parent_id,
                parent_kind : questionQuestionEqualsToken.parent_kind,
                index : questionQuestionEqualsToken.index,
                location_id : questionQuestionEqualsToken.location_id,
            }
        }
    }

    /**
     * Get primary key.
     */
    pub fn getPrimaryKey(self) -> int {
        return self.id
    }
    
    /**
     * trans to QuestionQuestionToken
     */
    pub fn toQuestionQuestionToken(self) -> QuestionQuestionToken {
        for (questionQuestionToken in QuestionQuestionToken(__all_data__)) {
            if (questionQuestionToken.key_eq(self)) {
                return questionQuestionToken
            }
        }
    }
    
    /**
     * trans to AsteriskAsteriskToken
     */
    pub fn toAsteriskAsteriskToken(self) -> AsteriskAsteriskToken {
        for (asteriskAsteriskToken in AsteriskAsteriskToken(__all_data__)) {
            if (asteriskAsteriskToken.key_eq(self)) {
                return asteriskAsteriskToken
            }
        }
    }
    
    /**
     * trans to AsteriskToken
     */
    pub fn toAsteriskToken(self) -> AsteriskToken {
        for (asteriskToken in AsteriskToken(__all_data__)) {
            if (asteriskToken.key_eq(self)) {
                return asteriskToken
            }
        }
    }
    
    /**
     * trans to SlashToken
     */
    pub fn toSlashToken(self) -> SlashToken {
        for (slashToken in SlashToken(__all_data__)) {
            if (slashToken.key_eq(self)) {
                return slashToken
            }
        }
    }
    
    /**
     * trans to PercentToken
     */
    pub fn toPercentToken(self) -> PercentToken {
        for (percentToken in PercentToken(__all_data__)) {
            if (percentToken.key_eq(self)) {
                return percentToken
            }
        }
    }
    
    /**
     * trans to PlusToken
     */
    pub fn toPlusToken(self) -> PlusToken {
        for (plusToken in PlusToken(__all_data__)) {
            if (plusToken.key_eq(self)) {
                return plusToken
            }
        }
    }
    
    /**
     * trans to MinusToken
     */
    pub fn toMinusToken(self) -> MinusToken {
        for (minusToken in MinusToken(__all_data__)) {
            if (minusToken.key_eq(self)) {
                return minusToken
            }
        }
    }
    
    /**
     * trans to LessThanLessThanToken
     */
    pub fn toLessThanLessThanToken(self) -> LessThanLessThanToken {
        for (lessThanLessThanToken in LessThanLessThanToken(__all_data__)) {
            if (lessThanLessThanToken.key_eq(self)) {
                return lessThanLessThanToken
            }
        }
    }
    
    /**
     * trans to GreaterThanGreaterThanToken
     */
    pub fn toGreaterThanGreaterThanToken(self) -> GreaterThanGreaterThanToken {
        for (greaterThanGreaterThanToken in GreaterThanGreaterThanToken(__all_data__)) {
            if (greaterThanGreaterThanToken.key_eq(self)) {
                return greaterThanGreaterThanToken
            }
        }
    }
    
    /**
     * trans to GreaterThanGreaterThanGreaterThanToken
     */
    pub fn toGreaterThanGreaterThanGreaterThanToken(self) -> GreaterThanGreaterThanGreaterThanToken {
        for (greaterThanGreaterThanGreaterThanToken in GreaterThanGreaterThanGreaterThanToken(__all_data__)) {
            if (greaterThanGreaterThanGreaterThanToken.key_eq(self)) {
                return greaterThanGreaterThanGreaterThanToken
            }
        }
    }
    
    /**
     * trans to LessThanToken
     */
    pub fn toLessThanToken(self) -> LessThanToken {
        for (lessThanToken in LessThanToken(__all_data__)) {
            if (lessThanToken.key_eq(self)) {
                return lessThanToken
            }
        }
    }
    
    /**
     * trans to LessThanEqualsToken
     */
    pub fn toLessThanEqualsToken(self) -> LessThanEqualsToken {
        for (lessThanEqualsToken in LessThanEqualsToken(__all_data__)) {
            if (lessThanEqualsToken.key_eq(self)) {
                return lessThanEqualsToken
            }
        }
    }
    
    /**
     * trans to GreaterThanToken
     */
    pub fn toGreaterThanToken(self) -> GreaterThanToken {
        for (greaterThanToken in GreaterThanToken(__all_data__)) {
            if (greaterThanToken.key_eq(self)) {
                return greaterThanToken
            }
        }
    }
    
    /**
     * trans to GreaterThanEqualsToken
     */
    pub fn toGreaterThanEqualsToken(self) -> GreaterThanEqualsToken {
        for (greaterThanEqualsToken in GreaterThanEqualsToken(__all_data__)) {
            if (greaterThanEqualsToken.key_eq(self)) {
                return greaterThanEqualsToken
            }
        }
    }
    
    /**
     * trans to InstanceOfKeyword
     */
    pub fn toInstanceOfKeyword(self) -> InstanceOfKeyword {
        for (instanceOfKeyword in InstanceOfKeyword(__all_data__)) {
            if (instanceOfKeyword.key_eq(self)) {
                return instanceOfKeyword
            }
        }
    }
    
    /**
     * trans to InKeyword
     */
    pub fn toInKeyword(self) -> InKeyword {
        for (inKeyword in InKeyword(__all_data__)) {
            if (inKeyword.key_eq(self)) {
                return inKeyword
            }
        }
    }
    
    /**
     * trans to EqualsEqualsToken
     */
    pub fn toEqualsEqualsToken(self) -> EqualsEqualsToken {
        for (equalsEqualsToken in EqualsEqualsToken(__all_data__)) {
            if (equalsEqualsToken.key_eq(self)) {
                return equalsEqualsToken
            }
        }
    }
    
    /**
     * trans to EqualsEqualsEqualsToken
     */
    pub fn toEqualsEqualsEqualsToken(self) -> EqualsEqualsEqualsToken {
        for (equalsEqualsEqualsToken in EqualsEqualsEqualsToken(__all_data__)) {
            if (equalsEqualsEqualsToken.key_eq(self)) {
                return equalsEqualsEqualsToken
            }
        }
    }
    
    /**
     * trans to ExclamationEqualsEqualsToken
     */
    pub fn toExclamationEqualsEqualsToken(self) -> ExclamationEqualsEqualsToken {
        for (exclamationEqualsEqualsToken in ExclamationEqualsEqualsToken(__all_data__)) {
            if (exclamationEqualsEqualsToken.key_eq(self)) {
                return exclamationEqualsEqualsToken
            }
        }
    }
    
    /**
     * trans to ExclamationEqualsToken
     */
    pub fn toExclamationEqualsToken(self) -> ExclamationEqualsToken {
        for (exclamationEqualsToken in ExclamationEqualsToken(__all_data__)) {
            if (exclamationEqualsToken.key_eq(self)) {
                return exclamationEqualsToken
            }
        }
    }
    
    /**
     * trans to AmpersandToken
     */
    pub fn toAmpersandToken(self) -> AmpersandToken {
        for (ampersandToken in AmpersandToken(__all_data__)) {
            if (ampersandToken.key_eq(self)) {
                return ampersandToken
            }
        }
    }
    
    /**
     * trans to BarToken
     */
    pub fn toBarToken(self) -> BarToken {
        for (barToken in BarToken(__all_data__)) {
            if (barToken.key_eq(self)) {
                return barToken
            }
        }
    }
    
    /**
     * trans to CaretToken
     */
    pub fn toCaretToken(self) -> CaretToken {
        for (caretToken in CaretToken(__all_data__)) {
            if (caretToken.key_eq(self)) {
                return caretToken
            }
        }
    }
    
    /**
     * trans to AmpersandAmpersandToken
     */
    pub fn toAmpersandAmpersandToken(self) -> AmpersandAmpersandToken {
        for (ampersandAmpersandToken in AmpersandAmpersandToken(__all_data__)) {
            if (ampersandAmpersandToken.key_eq(self)) {
                return ampersandAmpersandToken
            }
        }
    }
    
    /**
     * trans to BarBarToken
     */
    pub fn toBarBarToken(self) -> BarBarToken {
        for (barBarToken in BarBarToken(__all_data__)) {
            if (barBarToken.key_eq(self)) {
                return barBarToken
            }
        }
    }
    
    /**
     * trans to EqualsToken
     */
    pub fn toEqualsToken(self) -> EqualsToken {
        for (equalsToken in EqualsToken(__all_data__)) {
            if (equalsToken.key_eq(self)) {
                return equalsToken
            }
        }
    }
    
    /**
     * trans to PlusEqualsToken
     */
    pub fn toPlusEqualsToken(self) -> PlusEqualsToken {
        for (plusEqualsToken in PlusEqualsToken(__all_data__)) {
            if (plusEqualsToken.key_eq(self)) {
                return plusEqualsToken
            }
        }
    }
    
    /**
     * trans to MinusEqualsToken
     */
    pub fn toMinusEqualsToken(self) -> MinusEqualsToken {
        for (minusEqualsToken in MinusEqualsToken(__all_data__)) {
            if (minusEqualsToken.key_eq(self)) {
                return minusEqualsToken
            }
        }
    }
    
    /**
     * trans to AsteriskEqualsToken
     */
    pub fn toAsteriskEqualsToken(self) -> AsteriskEqualsToken {
        for (asteriskEqualsToken in AsteriskEqualsToken(__all_data__)) {
            if (asteriskEqualsToken.key_eq(self)) {
                return asteriskEqualsToken
            }
        }
    }
    
    /**
     * trans to AsteriskAsteriskEqualsToken
     */
    pub fn toAsteriskAsteriskEqualsToken(self) -> AsteriskAsteriskEqualsToken {
        for (asteriskAsteriskEqualsToken in AsteriskAsteriskEqualsToken(__all_data__)) {
            if (asteriskAsteriskEqualsToken.key_eq(self)) {
                return asteriskAsteriskEqualsToken
            }
        }
    }
    
    /**
     * trans to SlashEqualsToken
     */
    pub fn toSlashEqualsToken(self) -> SlashEqualsToken {
        for (slashEqualsToken in SlashEqualsToken(__all_data__)) {
            if (slashEqualsToken.key_eq(self)) {
                return slashEqualsToken
            }
        }
    }
    
    /**
     * trans to PercentEqualsToken
     */
    pub fn toPercentEqualsToken(self) -> PercentEqualsToken {
        for (percentEqualsToken in PercentEqualsToken(__all_data__)) {
            if (percentEqualsToken.key_eq(self)) {
                return percentEqualsToken
            }
        }
    }
    
    /**
     * trans to AmpersandEqualsToken
     */
    pub fn toAmpersandEqualsToken(self) -> AmpersandEqualsToken {
        for (ampersandEqualsToken in AmpersandEqualsToken(__all_data__)) {
            if (ampersandEqualsToken.key_eq(self)) {
                return ampersandEqualsToken
            }
        }
    }
    
    /**
     * trans to BarEqualsToken
     */
    pub fn toBarEqualsToken(self) -> BarEqualsToken {
        for (barEqualsToken in BarEqualsToken(__all_data__)) {
            if (barEqualsToken.key_eq(self)) {
                return barEqualsToken
            }
        }
    }
    
    /**
     * trans to CaretEqualsToken
     */
    pub fn toCaretEqualsToken(self) -> CaretEqualsToken {
        for (caretEqualsToken in CaretEqualsToken(__all_data__)) {
            if (caretEqualsToken.key_eq(self)) {
                return caretEqualsToken
            }
        }
    }
    
    /**
     * trans to LessThanLessThanEqualsToken
     */
    pub fn toLessThanLessThanEqualsToken(self) -> LessThanLessThanEqualsToken {
        for (lessThanLessThanEqualsToken in LessThanLessThanEqualsToken(__all_data__)) {
            if (lessThanLessThanEqualsToken.key_eq(self)) {
                return lessThanLessThanEqualsToken
            }
        }
    }
    
    /**
     * trans to GreaterThanGreaterThanGreaterThanEqualsToken
     */
    pub fn toGreaterThanGreaterThanGreaterThanEqualsToken(self) -> GreaterThanGreaterThanGreaterThanEqualsToken {
        for (greaterThanGreaterThanGreaterThanEqualsToken in GreaterThanGreaterThanGreaterThanEqualsToken(__all_data__)) {
            if (greaterThanGreaterThanGreaterThanEqualsToken.key_eq(self)) {
                return greaterThanGreaterThanGreaterThanEqualsToken
            }
        }
    }
    
    /**
     * trans to GreaterThanGreaterThanEqualsToken
     */
    pub fn toGreaterThanGreaterThanEqualsToken(self) -> GreaterThanGreaterThanEqualsToken {
        for (greaterThanGreaterThanEqualsToken in GreaterThanGreaterThanEqualsToken(__all_data__)) {
            if (greaterThanGreaterThanEqualsToken.key_eq(self)) {
                return greaterThanGreaterThanEqualsToken
            }
        }
    }
    
    /**
     * trans to BarBarEqualsToken
     */
    pub fn toBarBarEqualsToken(self) -> BarBarEqualsToken {
        for (barBarEqualsToken in BarBarEqualsToken(__all_data__)) {
            if (barBarEqualsToken.key_eq(self)) {
                return barBarEqualsToken
            }
        }
    }
    
    /**
     * trans to AmpersandAmpersandEqualsToken
     */
    pub fn toAmpersandAmpersandEqualsToken(self) -> AmpersandAmpersandEqualsToken {
        for (ampersandAmpersandEqualsToken in AmpersandAmpersandEqualsToken(__all_data__)) {
            if (ampersandAmpersandEqualsToken.key_eq(self)) {
                return ampersandAmpersandEqualsToken
            }
        }
    }
    
    /**
     * trans to QuestionQuestionEqualsToken
     */
    pub fn toQuestionQuestionEqualsToken(self) -> QuestionQuestionEqualsToken {
        for (questionQuestionEqualsToken in QuestionQuestionEqualsToken(__all_data__)) {
            if (questionQuestionEqualsToken.key_eq(self)) {
                return questionQuestionEqualsToken
            }
        }
    }
    
}

/**
 * This type consists of the following types: [CommaToken, QuestionQuestionToken, AsteriskAsteriskToken, AsteriskToken, SlashToken, PercentToken, PlusToken, MinusToken, LessThanLessThanToken, GreaterThanGreaterThanToken, GreaterThanGreaterThanGreaterThanToken, LessThanToken, LessThanEqualsToken, GreaterThanToken, GreaterThanEqualsToken, InstanceOfKeyword, InKeyword, EqualsEqualsToken, EqualsEqualsEqualsToken, ExclamationEqualsEqualsToken, ExclamationEqualsToken, AmpersandToken, BarToken, CaretToken, AmpersandAmpersandToken, BarBarToken, EqualsToken, PlusEqualsToken, MinusEqualsToken, AsteriskEqualsToken, AsteriskAsteriskEqualsToken, SlashEqualsToken, PercentEqualsToken, AmpersandEqualsToken, BarEqualsToken, CaretEqualsToken, LessThanLessThanEqualsToken, GreaterThanGreaterThanGreaterThanEqualsToken, GreaterThanGreaterThanEqualsToken, BarBarEqualsToken, AmpersandAmpersandEqualsToken, QuestionQuestionEqualsToken]
 */
schema BinaryOperator extends AstNode {
}

impl BinaryOperator {
    @data_constraint
    @inline
    pub fn __all__(db: ArkTsDB) -> *BinaryOperator {
        for (commaToken in CommaToken(db)) {
            yield BinaryOperator {
                id : commaToken.id,
                kind : commaToken.kind,
                parent_id : commaToken.parent_id,
                parent_kind : commaToken.parent_kind,
                index : commaToken.index,
                location_id : commaToken.location_id,
            }
        }
        for (questionQuestionToken in QuestionQuestionToken(db)) {
            yield BinaryOperator {
                id : questionQuestionToken.id,
                kind : questionQuestionToken.kind,
                parent_id : questionQuestionToken.parent_id,
                parent_kind : questionQuestionToken.parent_kind,
                index : questionQuestionToken.index,
                location_id : questionQuestionToken.location_id,
            }
        }
        for (asteriskAsteriskToken in AsteriskAsteriskToken(db)) {
            yield BinaryOperator {
                id : asteriskAsteriskToken.id,
                kind : asteriskAsteriskToken.kind,
                parent_id : asteriskAsteriskToken.parent_id,
                parent_kind : asteriskAsteriskToken.parent_kind,
                index : asteriskAsteriskToken.index,
                location_id : asteriskAsteriskToken.location_id,
            }
        }
        for (asteriskToken in AsteriskToken(db)) {
            yield BinaryOperator {
                id : asteriskToken.id,
                kind : asteriskToken.kind,
                parent_id : asteriskToken.parent_id,
                parent_kind : asteriskToken.parent_kind,
                index : asteriskToken.index,
                location_id : asteriskToken.location_id,
            }
        }
        for (slashToken in SlashToken(db)) {
            yield BinaryOperator {
                id : slashToken.id,
                kind : slashToken.kind,
                parent_id : slashToken.parent_id,
                parent_kind : slashToken.parent_kind,
                index : slashToken.index,
                location_id : slashToken.location_id,
            }
        }
        for (percentToken in PercentToken(db)) {
            yield BinaryOperator {
                id : percentToken.id,
                kind : percentToken.kind,
                parent_id : percentToken.parent_id,
                parent_kind : percentToken.parent_kind,
                index : percentToken.index,
                location_id : percentToken.location_id,
            }
        }
        for (plusToken in PlusToken(db)) {
            yield BinaryOperator {
                id : plusToken.id,
                kind : plusToken.kind,
                parent_id : plusToken.parent_id,
                parent_kind : plusToken.parent_kind,
                index : plusToken.index,
                location_id : plusToken.location_id,
            }
        }
        for (minusToken in MinusToken(db)) {
            yield BinaryOperator {
                id : minusToken.id,
                kind : minusToken.kind,
                parent_id : minusToken.parent_id,
                parent_kind : minusToken.parent_kind,
                index : minusToken.index,
                location_id : minusToken.location_id,
            }
        }
        for (lessThanLessThanToken in LessThanLessThanToken(db)) {
            yield BinaryOperator {
                id : lessThanLessThanToken.id,
                kind : lessThanLessThanToken.kind,
                parent_id : lessThanLessThanToken.parent_id,
                parent_kind : lessThanLessThanToken.parent_kind,
                index : lessThanLessThanToken.index,
                location_id : lessThanLessThanToken.location_id,
            }
        }
        for (greaterThanGreaterThanToken in GreaterThanGreaterThanToken(db)) {
            yield BinaryOperator {
                id : greaterThanGreaterThanToken.id,
                kind : greaterThanGreaterThanToken.kind,
                parent_id : greaterThanGreaterThanToken.parent_id,
                parent_kind : greaterThanGreaterThanToken.parent_kind,
                index : greaterThanGreaterThanToken.index,
                location_id : greaterThanGreaterThanToken.location_id,
            }
        }
        for (greaterThanGreaterThanGreaterThanToken in GreaterThanGreaterThanGreaterThanToken(db)) {
            yield BinaryOperator {
                id : greaterThanGreaterThanGreaterThanToken.id,
                kind : greaterThanGreaterThanGreaterThanToken.kind,
                parent_id : greaterThanGreaterThanGreaterThanToken.parent_id,
                parent_kind : greaterThanGreaterThanGreaterThanToken.parent_kind,
                index : greaterThanGreaterThanGreaterThanToken.index,
                location_id : greaterThanGreaterThanGreaterThanToken.location_id,
            }
        }
        for (lessThanToken in LessThanToken(db)) {
            yield BinaryOperator {
                id : lessThanToken.id,
                kind : lessThanToken.kind,
                parent_id : lessThanToken.parent_id,
                parent_kind : lessThanToken.parent_kind,
                index : lessThanToken.index,
                location_id : lessThanToken.location_id,
            }
        }
        for (lessThanEqualsToken in LessThanEqualsToken(db)) {
            yield BinaryOperator {
                id : lessThanEqualsToken.id,
                kind : lessThanEqualsToken.kind,
                parent_id : lessThanEqualsToken.parent_id,
                parent_kind : lessThanEqualsToken.parent_kind,
                index : lessThanEqualsToken.index,
                location_id : lessThanEqualsToken.location_id,
            }
        }
        for (greaterThanToken in GreaterThanToken(db)) {
            yield BinaryOperator {
                id : greaterThanToken.id,
                kind : greaterThanToken.kind,
                parent_id : greaterThanToken.parent_id,
                parent_kind : greaterThanToken.parent_kind,
                index : greaterThanToken.index,
                location_id : greaterThanToken.location_id,
            }
        }
        for (greaterThanEqualsToken in GreaterThanEqualsToken(db)) {
            yield BinaryOperator {
                id : greaterThanEqualsToken.id,
                kind : greaterThanEqualsToken.kind,
                parent_id : greaterThanEqualsToken.parent_id,
                parent_kind : greaterThanEqualsToken.parent_kind,
                index : greaterThanEqualsToken.index,
                location_id : greaterThanEqualsToken.location_id,
            }
        }
        for (instanceOfKeyword in InstanceOfKeyword(db)) {
            yield BinaryOperator {
                id : instanceOfKeyword.id,
                kind : instanceOfKeyword.kind,
                parent_id : instanceOfKeyword.parent_id,
                parent_kind : instanceOfKeyword.parent_kind,
                index : instanceOfKeyword.index,
                location_id : instanceOfKeyword.location_id,
            }
        }
        for (inKeyword in InKeyword(db)) {
            yield BinaryOperator {
                id : inKeyword.id,
                kind : inKeyword.kind,
                parent_id : inKeyword.parent_id,
                parent_kind : inKeyword.parent_kind,
                index : inKeyword.index,
                location_id : inKeyword.location_id,
            }
        }
        for (equalsEqualsToken in EqualsEqualsToken(db)) {
            yield BinaryOperator {
                id : equalsEqualsToken.id,
                kind : equalsEqualsToken.kind,
                parent_id : equalsEqualsToken.parent_id,
                parent_kind : equalsEqualsToken.parent_kind,
                index : equalsEqualsToken.index,
                location_id : equalsEqualsToken.location_id,
            }
        }
        for (equalsEqualsEqualsToken in EqualsEqualsEqualsToken(db)) {
            yield BinaryOperator {
                id : equalsEqualsEqualsToken.id,
                kind : equalsEqualsEqualsToken.kind,
                parent_id : equalsEqualsEqualsToken.parent_id,
                parent_kind : equalsEqualsEqualsToken.parent_kind,
                index : equalsEqualsEqualsToken.index,
                location_id : equalsEqualsEqualsToken.location_id,
            }
        }
        for (exclamationEqualsEqualsToken in ExclamationEqualsEqualsToken(db)) {
            yield BinaryOperator {
                id : exclamationEqualsEqualsToken.id,
                kind : exclamationEqualsEqualsToken.kind,
                parent_id : exclamationEqualsEqualsToken.parent_id,
                parent_kind : exclamationEqualsEqualsToken.parent_kind,
                index : exclamationEqualsEqualsToken.index,
                location_id : exclamationEqualsEqualsToken.location_id,
            }
        }
        for (exclamationEqualsToken in ExclamationEqualsToken(db)) {
            yield BinaryOperator {
                id : exclamationEqualsToken.id,
                kind : exclamationEqualsToken.kind,
                parent_id : exclamationEqualsToken.parent_id,
                parent_kind : exclamationEqualsToken.parent_kind,
                index : exclamationEqualsToken.index,
                location_id : exclamationEqualsToken.location_id,
            }
        }
        for (ampersandToken in AmpersandToken(db)) {
            yield BinaryOperator {
                id : ampersandToken.id,
                kind : ampersandToken.kind,
                parent_id : ampersandToken.parent_id,
                parent_kind : ampersandToken.parent_kind,
                index : ampersandToken.index,
                location_id : ampersandToken.location_id,
            }
        }
        for (barToken in BarToken(db)) {
            yield BinaryOperator {
                id : barToken.id,
                kind : barToken.kind,
                parent_id : barToken.parent_id,
                parent_kind : barToken.parent_kind,
                index : barToken.index,
                location_id : barToken.location_id,
            }
        }
        for (caretToken in CaretToken(db)) {
            yield BinaryOperator {
                id : caretToken.id,
                kind : caretToken.kind,
                parent_id : caretToken.parent_id,
                parent_kind : caretToken.parent_kind,
                index : caretToken.index,
                location_id : caretToken.location_id,
            }
        }
        for (ampersandAmpersandToken in AmpersandAmpersandToken(db)) {
            yield BinaryOperator {
                id : ampersandAmpersandToken.id,
                kind : ampersandAmpersandToken.kind,
                parent_id : ampersandAmpersandToken.parent_id,
                parent_kind : ampersandAmpersandToken.parent_kind,
                index : ampersandAmpersandToken.index,
                location_id : ampersandAmpersandToken.location_id,
            }
        }
        for (barBarToken in BarBarToken(db)) {
            yield BinaryOperator {
                id : barBarToken.id,
                kind : barBarToken.kind,
                parent_id : barBarToken.parent_id,
                parent_kind : barBarToken.parent_kind,
                index : barBarToken.index,
                location_id : barBarToken.location_id,
            }
        }
        for (equalsToken in EqualsToken(db)) {
            yield BinaryOperator {
                id : equalsToken.id,
                kind : equalsToken.kind,
                parent_id : equalsToken.parent_id,
                parent_kind : equalsToken.parent_kind,
                index : equalsToken.index,
                location_id : equalsToken.location_id,
            }
        }
        for (plusEqualsToken in PlusEqualsToken(db)) {
            yield BinaryOperator {
                id : plusEqualsToken.id,
                kind : plusEqualsToken.kind,
                parent_id : plusEqualsToken.parent_id,
                parent_kind : plusEqualsToken.parent_kind,
                index : plusEqualsToken.index,
                location_id : plusEqualsToken.location_id,
            }
        }
        for (minusEqualsToken in MinusEqualsToken(db)) {
            yield BinaryOperator {
                id : minusEqualsToken.id,
                kind : minusEqualsToken.kind,
                parent_id : minusEqualsToken.parent_id,
                parent_kind : minusEqualsToken.parent_kind,
                index : minusEqualsToken.index,
                location_id : minusEqualsToken.location_id,
            }
        }
        for (asteriskEqualsToken in AsteriskEqualsToken(db)) {
            yield BinaryOperator {
                id : asteriskEqualsToken.id,
                kind : asteriskEqualsToken.kind,
                parent_id : asteriskEqualsToken.parent_id,
                parent_kind : asteriskEqualsToken.parent_kind,
                index : asteriskEqualsToken.index,
                location_id : asteriskEqualsToken.location_id,
            }
        }
        for (asteriskAsteriskEqualsToken in AsteriskAsteriskEqualsToken(db)) {
            yield BinaryOperator {
                id : asteriskAsteriskEqualsToken.id,
                kind : asteriskAsteriskEqualsToken.kind,
                parent_id : asteriskAsteriskEqualsToken.parent_id,
                parent_kind : asteriskAsteriskEqualsToken.parent_kind,
                index : asteriskAsteriskEqualsToken.index,
                location_id : asteriskAsteriskEqualsToken.location_id,
            }
        }
        for (slashEqualsToken in SlashEqualsToken(db)) {
            yield BinaryOperator {
                id : slashEqualsToken.id,
                kind : slashEqualsToken.kind,
                parent_id : slashEqualsToken.parent_id,
                parent_kind : slashEqualsToken.parent_kind,
                index : slashEqualsToken.index,
                location_id : slashEqualsToken.location_id,
            }
        }
        for (percentEqualsToken in PercentEqualsToken(db)) {
            yield BinaryOperator {
                id : percentEqualsToken.id,
                kind : percentEqualsToken.kind,
                parent_id : percentEqualsToken.parent_id,
                parent_kind : percentEqualsToken.parent_kind,
                index : percentEqualsToken.index,
                location_id : percentEqualsToken.location_id,
            }
        }
        for (ampersandEqualsToken in AmpersandEqualsToken(db)) {
            yield BinaryOperator {
                id : ampersandEqualsToken.id,
                kind : ampersandEqualsToken.kind,
                parent_id : ampersandEqualsToken.parent_id,
                parent_kind : ampersandEqualsToken.parent_kind,
                index : ampersandEqualsToken.index,
                location_id : ampersandEqualsToken.location_id,
            }
        }
        for (barEqualsToken in BarEqualsToken(db)) {
            yield BinaryOperator {
                id : barEqualsToken.id,
                kind : barEqualsToken.kind,
                parent_id : barEqualsToken.parent_id,
                parent_kind : barEqualsToken.parent_kind,
                index : barEqualsToken.index,
                location_id : barEqualsToken.location_id,
            }
        }
        for (caretEqualsToken in CaretEqualsToken(db)) {
            yield BinaryOperator {
                id : caretEqualsToken.id,
                kind : caretEqualsToken.kind,
                parent_id : caretEqualsToken.parent_id,
                parent_kind : caretEqualsToken.parent_kind,
                index : caretEqualsToken.index,
                location_id : caretEqualsToken.location_id,
            }
        }
        for (lessThanLessThanEqualsToken in LessThanLessThanEqualsToken(db)) {
            yield BinaryOperator {
                id : lessThanLessThanEqualsToken.id,
                kind : lessThanLessThanEqualsToken.kind,
                parent_id : lessThanLessThanEqualsToken.parent_id,
                parent_kind : lessThanLessThanEqualsToken.parent_kind,
                index : lessThanLessThanEqualsToken.index,
                location_id : lessThanLessThanEqualsToken.location_id,
            }
        }
        for (greaterThanGreaterThanGreaterThanEqualsToken in GreaterThanGreaterThanGreaterThanEqualsToken(db)) {
            yield BinaryOperator {
                id : greaterThanGreaterThanGreaterThanEqualsToken.id,
                kind : greaterThanGreaterThanGreaterThanEqualsToken.kind,
                parent_id : greaterThanGreaterThanGreaterThanEqualsToken.parent_id,
                parent_kind : greaterThanGreaterThanGreaterThanEqualsToken.parent_kind,
                index : greaterThanGreaterThanGreaterThanEqualsToken.index,
                location_id : greaterThanGreaterThanGreaterThanEqualsToken.location_id,
            }
        }
        for (greaterThanGreaterThanEqualsToken in GreaterThanGreaterThanEqualsToken(db)) {
            yield BinaryOperator {
                id : greaterThanGreaterThanEqualsToken.id,
                kind : greaterThanGreaterThanEqualsToken.kind,
                parent_id : greaterThanGreaterThanEqualsToken.parent_id,
                parent_kind : greaterThanGreaterThanEqualsToken.parent_kind,
                index : greaterThanGreaterThanEqualsToken.index,
                location_id : greaterThanGreaterThanEqualsToken.location_id,
            }
        }
        for (barBarEqualsToken in BarBarEqualsToken(db)) {
            yield BinaryOperator {
                id : barBarEqualsToken.id,
                kind : barBarEqualsToken.kind,
                parent_id : barBarEqualsToken.parent_id,
                parent_kind : barBarEqualsToken.parent_kind,
                index : barBarEqualsToken.index,
                location_id : barBarEqualsToken.location_id,
            }
        }
        for (ampersandAmpersandEqualsToken in AmpersandAmpersandEqualsToken(db)) {
            yield BinaryOperator {
                id : ampersandAmpersandEqualsToken.id,
                kind : ampersandAmpersandEqualsToken.kind,
                parent_id : ampersandAmpersandEqualsToken.parent_id,
                parent_kind : ampersandAmpersandEqualsToken.parent_kind,
                index : ampersandAmpersandEqualsToken.index,
                location_id : ampersandAmpersandEqualsToken.location_id,
            }
        }
        for (questionQuestionEqualsToken in QuestionQuestionEqualsToken(db)) {
            yield BinaryOperator {
                id : questionQuestionEqualsToken.id,
                kind : questionQuestionEqualsToken.kind,
                parent_id : questionQuestionEqualsToken.parent_id,
                parent_kind : questionQuestionEqualsToken.parent_kind,
                index : questionQuestionEqualsToken.index,
                location_id : questionQuestionEqualsToken.location_id,
            }
        }
    }

    /**
     * Get primary key.
     */
    pub fn getPrimaryKey(self) -> int {
        return self.id
    }
    
    /**
     * trans to CommaToken
     */
    pub fn toCommaToken(self) -> CommaToken {
        for (commaToken in CommaToken(__all_data__)) {
            if (commaToken.key_eq(self)) {
                return commaToken
            }
        }
    }
    
    /**
     * trans to QuestionQuestionToken
     */
    pub fn toQuestionQuestionToken(self) -> QuestionQuestionToken {
        for (questionQuestionToken in QuestionQuestionToken(__all_data__)) {
            if (questionQuestionToken.key_eq(self)) {
                return questionQuestionToken
            }
        }
    }
    
    /**
     * trans to AsteriskAsteriskToken
     */
    pub fn toAsteriskAsteriskToken(self) -> AsteriskAsteriskToken {
        for (asteriskAsteriskToken in AsteriskAsteriskToken(__all_data__)) {
            if (asteriskAsteriskToken.key_eq(self)) {
                return asteriskAsteriskToken
            }
        }
    }
    
    /**
     * trans to AsteriskToken
     */
    pub fn toAsteriskToken(self) -> AsteriskToken {
        for (asteriskToken in AsteriskToken(__all_data__)) {
            if (asteriskToken.key_eq(self)) {
                return asteriskToken
            }
        }
    }
    
    /**
     * trans to SlashToken
     */
    pub fn toSlashToken(self) -> SlashToken {
        for (slashToken in SlashToken(__all_data__)) {
            if (slashToken.key_eq(self)) {
                return slashToken
            }
        }
    }
    
    /**
     * trans to PercentToken
     */
    pub fn toPercentToken(self) -> PercentToken {
        for (percentToken in PercentToken(__all_data__)) {
            if (percentToken.key_eq(self)) {
                return percentToken
            }
        }
    }
    
    /**
     * trans to PlusToken
     */
    pub fn toPlusToken(self) -> PlusToken {
        for (plusToken in PlusToken(__all_data__)) {
            if (plusToken.key_eq(self)) {
                return plusToken
            }
        }
    }
    
    /**
     * trans to MinusToken
     */
    pub fn toMinusToken(self) -> MinusToken {
        for (minusToken in MinusToken(__all_data__)) {
            if (minusToken.key_eq(self)) {
                return minusToken
            }
        }
    }
    
    /**
     * trans to LessThanLessThanToken
     */
    pub fn toLessThanLessThanToken(self) -> LessThanLessThanToken {
        for (lessThanLessThanToken in LessThanLessThanToken(__all_data__)) {
            if (lessThanLessThanToken.key_eq(self)) {
                return lessThanLessThanToken
            }
        }
    }
    
    /**
     * trans to GreaterThanGreaterThanToken
     */
    pub fn toGreaterThanGreaterThanToken(self) -> GreaterThanGreaterThanToken {
        for (greaterThanGreaterThanToken in GreaterThanGreaterThanToken(__all_data__)) {
            if (greaterThanGreaterThanToken.key_eq(self)) {
                return greaterThanGreaterThanToken
            }
        }
    }
    
    /**
     * trans to GreaterThanGreaterThanGreaterThanToken
     */
    pub fn toGreaterThanGreaterThanGreaterThanToken(self) -> GreaterThanGreaterThanGreaterThanToken {
        for (greaterThanGreaterThanGreaterThanToken in GreaterThanGreaterThanGreaterThanToken(__all_data__)) {
            if (greaterThanGreaterThanGreaterThanToken.key_eq(self)) {
                return greaterThanGreaterThanGreaterThanToken
            }
        }
    }
    
    /**
     * trans to LessThanToken
     */
    pub fn toLessThanToken(self) -> LessThanToken {
        for (lessThanToken in LessThanToken(__all_data__)) {
            if (lessThanToken.key_eq(self)) {
                return lessThanToken
            }
        }
    }
    
    /**
     * trans to LessThanEqualsToken
     */
    pub fn toLessThanEqualsToken(self) -> LessThanEqualsToken {
        for (lessThanEqualsToken in LessThanEqualsToken(__all_data__)) {
            if (lessThanEqualsToken.key_eq(self)) {
                return lessThanEqualsToken
            }
        }
    }
    
    /**
     * trans to GreaterThanToken
     */
    pub fn toGreaterThanToken(self) -> GreaterThanToken {
        for (greaterThanToken in GreaterThanToken(__all_data__)) {
            if (greaterThanToken.key_eq(self)) {
                return greaterThanToken
            }
        }
    }
    
    /**
     * trans to GreaterThanEqualsToken
     */
    pub fn toGreaterThanEqualsToken(self) -> GreaterThanEqualsToken {
        for (greaterThanEqualsToken in GreaterThanEqualsToken(__all_data__)) {
            if (greaterThanEqualsToken.key_eq(self)) {
                return greaterThanEqualsToken
            }
        }
    }
    
    /**
     * trans to InstanceOfKeyword
     */
    pub fn toInstanceOfKeyword(self) -> InstanceOfKeyword {
        for (instanceOfKeyword in InstanceOfKeyword(__all_data__)) {
            if (instanceOfKeyword.key_eq(self)) {
                return instanceOfKeyword
            }
        }
    }
    
    /**
     * trans to InKeyword
     */
    pub fn toInKeyword(self) -> InKeyword {
        for (inKeyword in InKeyword(__all_data__)) {
            if (inKeyword.key_eq(self)) {
                return inKeyword
            }
        }
    }
    
    /**
     * trans to EqualsEqualsToken
     */
    pub fn toEqualsEqualsToken(self) -> EqualsEqualsToken {
        for (equalsEqualsToken in EqualsEqualsToken(__all_data__)) {
            if (equalsEqualsToken.key_eq(self)) {
                return equalsEqualsToken
            }
        }
    }
    
    /**
     * trans to EqualsEqualsEqualsToken
     */
    pub fn toEqualsEqualsEqualsToken(self) -> EqualsEqualsEqualsToken {
        for (equalsEqualsEqualsToken in EqualsEqualsEqualsToken(__all_data__)) {
            if (equalsEqualsEqualsToken.key_eq(self)) {
                return equalsEqualsEqualsToken
            }
        }
    }
    
    /**
     * trans to ExclamationEqualsEqualsToken
     */
    pub fn toExclamationEqualsEqualsToken(self) -> ExclamationEqualsEqualsToken {
        for (exclamationEqualsEqualsToken in ExclamationEqualsEqualsToken(__all_data__)) {
            if (exclamationEqualsEqualsToken.key_eq(self)) {
                return exclamationEqualsEqualsToken
            }
        }
    }
    
    /**
     * trans to ExclamationEqualsToken
     */
    pub fn toExclamationEqualsToken(self) -> ExclamationEqualsToken {
        for (exclamationEqualsToken in ExclamationEqualsToken(__all_data__)) {
            if (exclamationEqualsToken.key_eq(self)) {
                return exclamationEqualsToken
            }
        }
    }
    
    /**
     * trans to AmpersandToken
     */
    pub fn toAmpersandToken(self) -> AmpersandToken {
        for (ampersandToken in AmpersandToken(__all_data__)) {
            if (ampersandToken.key_eq(self)) {
                return ampersandToken
            }
        }
    }
    
    /**
     * trans to BarToken
     */
    pub fn toBarToken(self) -> BarToken {
        for (barToken in BarToken(__all_data__)) {
            if (barToken.key_eq(self)) {
                return barToken
            }
        }
    }
    
    /**
     * trans to CaretToken
     */
    pub fn toCaretToken(self) -> CaretToken {
        for (caretToken in CaretToken(__all_data__)) {
            if (caretToken.key_eq(self)) {
                return caretToken
            }
        }
    }
    
    /**
     * trans to AmpersandAmpersandToken
     */
    pub fn toAmpersandAmpersandToken(self) -> AmpersandAmpersandToken {
        for (ampersandAmpersandToken in AmpersandAmpersandToken(__all_data__)) {
            if (ampersandAmpersandToken.key_eq(self)) {
                return ampersandAmpersandToken
            }
        }
    }
    
    /**
     * trans to BarBarToken
     */
    pub fn toBarBarToken(self) -> BarBarToken {
        for (barBarToken in BarBarToken(__all_data__)) {
            if (barBarToken.key_eq(self)) {
                return barBarToken
            }
        }
    }
    
    /**
     * trans to EqualsToken
     */
    pub fn toEqualsToken(self) -> EqualsToken {
        for (equalsToken in EqualsToken(__all_data__)) {
            if (equalsToken.key_eq(self)) {
                return equalsToken
            }
        }
    }
    
    /**
     * trans to PlusEqualsToken
     */
    pub fn toPlusEqualsToken(self) -> PlusEqualsToken {
        for (plusEqualsToken in PlusEqualsToken(__all_data__)) {
            if (plusEqualsToken.key_eq(self)) {
                return plusEqualsToken
            }
        }
    }
    
    /**
     * trans to MinusEqualsToken
     */
    pub fn toMinusEqualsToken(self) -> MinusEqualsToken {
        for (minusEqualsToken in MinusEqualsToken(__all_data__)) {
            if (minusEqualsToken.key_eq(self)) {
                return minusEqualsToken
            }
        }
    }
    
    /**
     * trans to AsteriskEqualsToken
     */
    pub fn toAsteriskEqualsToken(self) -> AsteriskEqualsToken {
        for (asteriskEqualsToken in AsteriskEqualsToken(__all_data__)) {
            if (asteriskEqualsToken.key_eq(self)) {
                return asteriskEqualsToken
            }
        }
    }
    
    /**
     * trans to AsteriskAsteriskEqualsToken
     */
    pub fn toAsteriskAsteriskEqualsToken(self) -> AsteriskAsteriskEqualsToken {
        for (asteriskAsteriskEqualsToken in AsteriskAsteriskEqualsToken(__all_data__)) {
            if (asteriskAsteriskEqualsToken.key_eq(self)) {
                return asteriskAsteriskEqualsToken
            }
        }
    }
    
    /**
     * trans to SlashEqualsToken
     */
    pub fn toSlashEqualsToken(self) -> SlashEqualsToken {
        for (slashEqualsToken in SlashEqualsToken(__all_data__)) {
            if (slashEqualsToken.key_eq(self)) {
                return slashEqualsToken
            }
        }
    }
    
    /**
     * trans to PercentEqualsToken
     */
    pub fn toPercentEqualsToken(self) -> PercentEqualsToken {
        for (percentEqualsToken in PercentEqualsToken(__all_data__)) {
            if (percentEqualsToken.key_eq(self)) {
                return percentEqualsToken
            }
        }
    }
    
    /**
     * trans to AmpersandEqualsToken
     */
    pub fn toAmpersandEqualsToken(self) -> AmpersandEqualsToken {
        for (ampersandEqualsToken in AmpersandEqualsToken(__all_data__)) {
            if (ampersandEqualsToken.key_eq(self)) {
                return ampersandEqualsToken
            }
        }
    }
    
    /**
     * trans to BarEqualsToken
     */
    pub fn toBarEqualsToken(self) -> BarEqualsToken {
        for (barEqualsToken in BarEqualsToken(__all_data__)) {
            if (barEqualsToken.key_eq(self)) {
                return barEqualsToken
            }
        }
    }
    
    /**
     * trans to CaretEqualsToken
     */
    pub fn toCaretEqualsToken(self) -> CaretEqualsToken {
        for (caretEqualsToken in CaretEqualsToken(__all_data__)) {
            if (caretEqualsToken.key_eq(self)) {
                return caretEqualsToken
            }
        }
    }
    
    /**
     * trans to LessThanLessThanEqualsToken
     */
    pub fn toLessThanLessThanEqualsToken(self) -> LessThanLessThanEqualsToken {
        for (lessThanLessThanEqualsToken in LessThanLessThanEqualsToken(__all_data__)) {
            if (lessThanLessThanEqualsToken.key_eq(self)) {
                return lessThanLessThanEqualsToken
            }
        }
    }
    
    /**
     * trans to GreaterThanGreaterThanGreaterThanEqualsToken
     */
    pub fn toGreaterThanGreaterThanGreaterThanEqualsToken(self) -> GreaterThanGreaterThanGreaterThanEqualsToken {
        for (greaterThanGreaterThanGreaterThanEqualsToken in GreaterThanGreaterThanGreaterThanEqualsToken(__all_data__)) {
            if (greaterThanGreaterThanGreaterThanEqualsToken.key_eq(self)) {
                return greaterThanGreaterThanGreaterThanEqualsToken
            }
        }
    }
    
    /**
     * trans to GreaterThanGreaterThanEqualsToken
     */
    pub fn toGreaterThanGreaterThanEqualsToken(self) -> GreaterThanGreaterThanEqualsToken {
        for (greaterThanGreaterThanEqualsToken in GreaterThanGreaterThanEqualsToken(__all_data__)) {
            if (greaterThanGreaterThanEqualsToken.key_eq(self)) {
                return greaterThanGreaterThanEqualsToken
            }
        }
    }
    
    /**
     * trans to BarBarEqualsToken
     */
    pub fn toBarBarEqualsToken(self) -> BarBarEqualsToken {
        for (barBarEqualsToken in BarBarEqualsToken(__all_data__)) {
            if (barBarEqualsToken.key_eq(self)) {
                return barBarEqualsToken
            }
        }
    }
    
    /**
     * trans to AmpersandAmpersandEqualsToken
     */
    pub fn toAmpersandAmpersandEqualsToken(self) -> AmpersandAmpersandEqualsToken {
        for (ampersandAmpersandEqualsToken in AmpersandAmpersandEqualsToken(__all_data__)) {
            if (ampersandAmpersandEqualsToken.key_eq(self)) {
                return ampersandAmpersandEqualsToken
            }
        }
    }
    
    /**
     * trans to QuestionQuestionEqualsToken
     */
    pub fn toQuestionQuestionEqualsToken(self) -> QuestionQuestionEqualsToken {
        for (questionQuestionEqualsToken in QuestionQuestionEqualsToken(__all_data__)) {
            if (questionQuestionEqualsToken.key_eq(self)) {
                return questionQuestionEqualsToken
            }
        }
    }
    
}

